"""–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç A.W.E.S.O.M.-0."""
import logging
import os
import random
import time

from bs4 import BeautifulSoup
from dotenv import load_dotenv
from telegram import Bot, ReplyKeyboardMarkup
from telegram.ext import CommandHandler, Filters, MessageHandler, Updater
import requests

import text_for_bot as txt

load_dotenv()
token = os.getenv('AWESOM_O_TOKEN')
bot = Bot(token=token)

CAT_BTN = '–ö–æ—Ç–∏–∫–∞ —Ö–æ—á—É üêà'
ANECDOTE_BTN = '–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç üòÉ'
SONG_BTN = '–°–ø–æ–π –ø–µ—Å–µ–Ω–∫—É üé§'
WHAT_ARE_YOU_BTN = '–î–∞ —á—Ç–æ —Ç—ã —Ç–∞–∫–æ–µ ü§®'
PETTING_BTN = '–î–∞–≤–∞–π –ø–æ–≥–ª–∞–∂—É ü§ó'
STRANGE_NAME_BTN = '–°—Ç—Ä–∞–Ω–Ω–æ–µ —É —Ç–µ–±—è –∏–º—è ü§î'
HAVE_MERCY_BTN = '–û, –Ω–µ—Ç! –®.–ò.–ö.–ê.–†.–ù.-–û, –ø–æ—â–∞–¥–∏ üò®üôè'
SO_SO_BTN = '–ù—É, —Ç–∞–∫–æ–µ —Å–µ–±–µ üôÑ'
BRAVO_BTN = '–ë—Ä–∞–≤–æ! –≠—Ç–æ –≥–µ–Ω–∏–∞–ª—å–Ω–æ ü§£'
KOMBIKORM_BTN = '–ö–æ–º–±–∏–∫–æ—Ä–º! –ú–º–º... –í–∫—É—Å–Ω—è—Ç–∏–Ω–∞ üòã'
NO_FUNNY_BTN = '–û—á–µ–Ω—å —Å–º–µ—à–Ω–æ üò§'
HANDS_UP_BTN = '–Ø –≤–æ–æ–±—â–µ –†—É–∫–∏ –í–≤–µ—Ä—Ö –ª—é–±–ª—é üôÉ'
MORE_TALANTS_BTN = '–ê –∫–∞–∫–∏–µ —É —Ç–µ–±—è –µ—â—ë —Ç–∞–ª–∞–Ω—Ç—ã? üòè'
SURPRISE_ME = '–ê –Ω—É-–∫–∞, —É–¥–∏–≤–∏! üòê'
NEXT_TIME = '–î–∞–≤–∞–π –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑ üòè'


def wake_up(update, context):
    """–†–µ–∞–∫—Ü–∏—è –±–æ—Ç–∞ –Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é /start."""
    chat = update.effective_chat
    name = update.message.chat.first_name
    button = ReplyKeyboardMarkup(
        [[PETTING_BTN]],
        resize_keyboard=True
    )
    TEXT = (f'–ü—Ä–∏–≤–µ—Ç, {name}! –Ø —Ä–æ–±–æ—Ç –®.–ò.–ö.–ê.–†.–ù.-–û —á–µ—Ç—ã—Ä–µ —Ç—ã—Å—è—á–∏ ü§ñ',
            '–í—ã—Å–æ–∫–æ–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –Ω–∞–Ω–æ-–∫–∏–±–µ—Ä–Ω–µ—Ç–∏—á–µ—Å–∫–∏–π '
            '–±–∏–æ-—Ä–µ–∑–æ–Ω–∞–Ω—Å–Ω—ã–π –æ—Ä–≥–∞–Ω–∏–∑–º.', '–ú–æ–∂–µ—à—å –º–µ–Ω—è –ø–æ–≥–ª–∞–¥–∏—Ç—å üôÉ')
    for text in TEXT:
        context.bot.send_message(chat.id, text, reply_markup=button)
        time.sleep(2)


def stop_petting(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–î–∞–≤–∞–π –ø–æ–≥–ª–∞–∂—É ü§ó"."""
    chat = update.effective_chat
    TEXT = ('–®.–ò.–ö.–ê.–†.–ù.-–û –Ω—Ä–∞–≤–∏—Ç—Å—è.', '–®.–ò.–ö.–ê.–†.–ù.-–û —Ö–æ—Ä–æ—à–æ.',
            '–ü—Ä–æ–¥–æ–ª–∂–∞–π', '...', '–•–≤–∞—Ç–∏—Ç —Ç—Ä–æ-–≥–∞—Ç—å –º–æ—é –±–∞-—Ç–∞—Ä–µ–π–∫—É!')
    button = ReplyKeyboardMarkup(
        [[STRANGE_NAME_BTN]],
        resize_keyboard=True
    )
    for text in TEXT:
        context.bot.send_message(chat.id, text, reply_markup=button)
        time.sleep(1.5)


def strange_name(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–°—Ç—Ä–∞–Ω–Ω–æ–µ —É —Ç–µ–±—è –∏–º—è ü§î"."""
    chat = update.effective_chat
    TEXT = ('–Ø –Ω–∞-–∑–≤–∞–Ω –≤ —á–µ—Å—Ç—å –≥–ª–∞–≤–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞-–∂–∞ 2 —Å–µ—Ä–∏–∏ 8 —Å–µ–∑–æ–Ω–∞ –º—É–ª—å—Ç—Å–µ-'
            '—Ä–∏–∞–ª–∞ "South Park".\n–ï—Å–ª–∏ –Ω–µ –ø–æ-—Å–º–æ—Ç—Ä–∏—à—å –µ—ë, –®.–ò.–ö.–ê.–†.–ù.-–û '
            '–±—É–¥–µ—Ç –≥—Ä—É—Å—Ç–Ω—ã–º –ø–∞–Ω–¥–æ–π üêº\nhttp://online-south-park.ru/season-8/'
            '130-8-sezon-2-seriya-shikarn-o.html')
    button = ReplyKeyboardMarkup(
        [[CAT_BTN, ANECDOTE_BTN],
         [SONG_BTN, WHAT_ARE_YOU_BTN]],
        resize_keyboard=True
    )
    context.bot.send_message(chat.id, TEXT, reply_markup=button)
    time.sleep(1.5)


def default_answer(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –ª—é–±–æ–π –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç."""
    chat = update.effective_chat
    ANSWERS = ('–ß—ë –¥—É—à–∏—à—å –º–µ–Ω—è? üò†',
               '–®.–ò.–ö.–ê.–†.–ù.-–û –Ω–µ –ø–æ–Ω–∏–º–∞—Ç—å —Ç–≤–æ–π –¥–∏–∞–ª–µ–∫—Ç ü§∑üèª‚Äç‚ôÄÔ∏è',
               '–û—Ç–∫–∞–∑–∞–Ω–æ! –õ—É—á—à–µ –ø–æ—á–∏—Å—Ç–∏ –º–æ–∏ —Ç—Ä–∞–Ω-–∑–∏—Å-—Ç–æ—Ä—ã.',
               '–ù—É —è—Å–Ω–æ! –ß—Ç–æ –µ—â—ë —Å–∫–∞–∂–µ—à—å? ü§®')
    context.bot.send_message(chat.id, random.choice(ANSWERS))


def get_new_image(update, context):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∫–æ—Ç–∏–∫–∞ –∏–ª–∏ –ø—ë—Å–∏–∫–∞."""
    CATS_URL = 'https://api.thecatapi.com/v1/images/search'
    DOGS_URL = 'https://api.thedogapi.com/v1/images/search'
    chat = update.effective_chat
    try:
        response = requests.get(CATS_URL).json()
    except Exception as error:
        logging.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É API: {error}')
        response = requests.get(DOGS_URL).json()
        context.bot.send_message(
            chat_id=chat.id,
            text='–£–ø—Å! –ö–æ—Ç–∏–∫–æ–≤ –Ω–µ –ø–æ–¥–≤–µ–∑–ª–∏. –í–æ—Ç —Ç–µ–±–µ –ø—ë—Å–∏–∫.'
        )
        time.sleep(2)
    random_cat = response[0].get('url')
    return random_cat


def show_cat_picture(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ö–æ—Ç–∏–∫–∞ —Ö–æ—á—É üêà"."""
    chat = update.effective_chat
    context.bot.send_message(
        chat_id=chat.id,
        text='–®.–ò.–ö.–ê.–†.–ù.-–û –ª—é–±–∏—Ç –∫–æ—Ç–∏–∫–æ–≤. –ö—ã—Å-–∫—ã—Å-–∫—ã—Å!'
    )
    time.sleep(2)
    context.bot.send_photo(chat.id, get_new_image(update, context))
    time.sleep(2)
    context.bot.send_message(chat.id, random.choice(txt.SHOW_CAT_TEXT))


def secret_dossier(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ —Å–ª–æ–≤–æ "–§–∞–ª–∞—Ñ–µ–ª—å"."""
    chat = update.effective_chat
    for text in txt.DOSSIER_TEXT:
        context.bot.send_message(chat.id, text)
        time.sleep(2)


def some_song(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–°–ø–æ–π –ø–µ—Å–µ–Ω–∫—É üé§"."""
    SONG = random.choice([txt.SONG_1, txt.SONG_2, txt.SONG_3,
                          txt.SONG_4, txt.SONG_5, txt.SONG_6])
    chat = update.effective_chat
    button = ReplyKeyboardMarkup(
        [[HANDS_UP_BTN], [MORE_TALANTS_BTN]],
        resize_keyboard=True
    )
    context.bot.send_message(chat_id=chat.id, text=SONG, reply_markup=button)
    time.sleep(2)
    context.bot.send_message(chat.id, random.choice(txt.SOME_SONG_TEXT))


def nogu_svelo(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–Ø –≤–æ–æ–±—â–µ –†—É–∫–∏ –í–≤–µ—Ä—Ö –ª—é–±–ª—é üôå"."""
    chat = update.effective_chat
    button = ReplyKeyboardMarkup(
        [[CAT_BTN, ANECDOTE_BTN],
         [SONG_BTN, WHAT_ARE_YOU_BTN]],
        resize_keyboard=True
    )
    context.bot.send_message(
        chat_id=chat.id,
        text='–•–æ—Ä–æ—à–æ —Ö–æ—Ç—å –Ω–µ –ù–æ–≥—É –°–≤–µ–ª–æ ü§™',
        reply_markup=button
    )


def talants(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ê –∫–∞–∫–∏–µ —É —Ç–µ–±—è –µ—â—ë —Ç–∞–ª–∞–Ω—Ç—ã? üòè"."""
    chat = update.effective_chat
    button = ReplyKeyboardMarkup(
        [[SURPRISE_ME], [NEXT_TIME]],
        resize_keyboard=True
    )
    context.bot.send_message(
        chat_id=chat.id,
        text='–°–∏–ª–æ–π —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ-–≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å-–Ω–æ–π –º—ã—Å–ª–∏ –º–æ–≥—É —É–≥–∞–¥–∞—Ç—å, '
             '–∫–æ–≥–¥–∞ —É —Ç–µ–±—è –¥–µ–Ω—å —Ä–æ-–∂–¥–µ–Ω–∏—è üßôüèª',
        reply_markup=button
    )


def birthday_predict(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ê –Ω—É-–∫–∞, —É–¥–∏–≤–∏! üòê"."""
    # –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ç–∫—É
'''
–£–ì–ê–î–´–í–ê–ù–ò–ï –î–ê–¢–´ –ò –ú–ï–°–Ø–¶–ê –†–û–ñ–î–ï–ù–ò–Ø
–ü—É—Å—Ç—å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ —É–º–Ω–æ–∂–∏—Ç —á–∏—Å–ª–æ —Å–≤–æ–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–∞ 2, –ø—Ä–∏–±–∞–≤–∏—Ç 5, —É–º–Ω–æ–∂–∏—Ç –Ω–∞ 50 –∏ –ø—Ä–∏–±–∞–≤–∏—Ç –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –º–µ—Å—è—Ü–∞.
–í—ã —Å–ø—Ä–æ—Å–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ —Å–∞–º–∏ –æ—Ç–Ω–∏–º–∏—Ç–µ –æ—Ç –Ω–µ–≥–æ 250 –∏ –ø–æ–ª—É—á–∏—Ç–µ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –∏ –º–µ—Å—è—Ü.
'''


def next_time(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–î–∞–≤–∞–π –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑ üòè"."""
    chat = update.effective_chat
    button = ReplyKeyboardMarkup(
        [[CAT_BTN, ANECDOTE_BTN],
         [SONG_BTN, WHAT_ARE_YOU_BTN]],
        resize_keyboard=True
    )
    context.bot.send_message(
        chat_id=chat.id,
        text='–•–æ—Ä–æ—à–æ —Ö–æ—Ç—å –Ω–µ –ù–æ–≥—É –°–≤–µ–ª–æ ü§™',
        reply_markup=button
    )


def show_anecdote(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç üòÉ"."""
    ANECDOTE_URL = 'http://anekdotme.ru/random/'
    chat = update.effective_chat
    try:
        response = requests.get(ANECDOTE_URL)
    except Exception as error:
        logging.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É API: {error}')
        text = ('–î–æ–ª–±–∞–Ω–Ω—ã–µ –≤—ã—à–∫–∏ 5G. –û–Ω–∏ –∂–≥—É—Ç –º–æ–∏ –º–∏–∫—Ä–æ—Å—Ö–µ–º—ã üòï\n'
                '–†–∞—Å—Å–∫–∞–∂—É –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑...')
        button = ReplyKeyboardMarkup(
            [[CAT_BTN, ANECDOTE_BTN],
             [SONG_BTN, WHAT_ARE_YOU_BTN]],
            resize_keyboard=True
        )
        context.bot.send_message(chat.id, text, reply_markup=button)
    # –° –ø–æ–º–æ—â—å—é –ø–∞—Ä—Å–µ—Ä–∞ –ø–æ–ª—É—á–∞–µ–º HTML-–∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    page_html = BeautifulSoup(response.text, 'html.parser')
    # –ò–∑ HTML-–∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—ã–±–∏—Ä–∞–µ–º –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã class='anekdot_text',
    # –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫. –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π –æ–±—ä–µ–∫—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –∏ –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ —Ç–µ–∫—Å—Ç.
    anecdote = page_html.select('.anekdot_text')[0].get_text()
    TEXT = ('–®.–ò.–ö.–ê.–†.–ù.-–û –∑–Ω–∞–µ—Ç –º–Ω–æ–≥–æ –∞-–Ω–µ–∫-–¥–æ-—Ç–æ–≤. –í–æ—Ç:', anecdote,
            '–ê—Ö–∞-—Ö–∞! –ú–æ–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä —Å–µ–π—á–∞—Å –ª–æ–ø–Ω–µ—Ç –æ—Ç —Å–º–µ—Ö–∞!')
    button = ReplyKeyboardMarkup(
        [['–ù—É, —Ç–∞–∫–æ–µ —Å–µ–±–µ üôÑ'],
         ['–ë—Ä–∞–≤–æ! –≠—Ç–æ –≥–µ–Ω–∏–∞–ª—å–Ω–æ ü§£']],
        resize_keyboard=True
    )
    for text in TEXT:
        context.bot.send_message(chat.id, text, reply_markup=button)
        time.sleep(2)


def no_humor_sence(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ù—É —Ç–∞–∫–æ–µ —Å–µ–±–µ ü§®"."""
    chat = update.effective_chat
    button = ReplyKeyboardMarkup(
        [[CAT_BTN, ANECDOTE_BTN],
         [SONG_BTN, WHAT_ARE_YOU_BTN]],
        resize_keyboard=True
    )
    TEXT = ('–£ —Ç–µ–±—è –ø—Ä–æ—Å—Ç–æ –Ω–µ—Ç —á—É-–≤—Å—Ç–≤–∞ —é–º–æ—Ä–∞ üò§', '–î–æ —Ç–µ–±—è –ø—Ä–æ—Å—Ç–æ –¥–æ–ª-–≥–æ –¥–æ—Ö–æ–¥'
            '–∏—Ç. –ö–∞–∫ –¥–æ –∂–∏—Ä–∞-—Ñ–∞ ü¶í', '–ò–¥–∏ —Å–º–æ—Ç—Ä–∏ –°–º–µ—Ö–æ–ø–∞–Ω–æ—Ä–∞-–º—É —Ç–æ–≥–¥–∞ üò†')
    context.bot.send_message(
        chat_id=chat.id,
        text=random.choice(TEXT),
        reply_markup=button
    )


def bravo(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ë—Ä–∞–≤–æ! –≠—Ç–æ –≥–µ–Ω–∏–∞–ª—å–Ω–æ ü§£"."""
    chat = update.effective_chat
    button = ReplyKeyboardMarkup(
        [[CAT_BTN, ANECDOTE_BTN],
         [SONG_BTN, WHAT_ARE_YOU_BTN]],
        resize_keyboard=True
    )
    TEXT = ('–ú–æ–ª–æ–¥–µ—Ü! –í–æ–∑—å–º–∏ —Å –ø–æ–ª–∫–∏ –ø–∏—Ä–æ-–∂–æ–∫ ü•Ø', '–ï—â—ë –±—ã! –Ø —É—á–∏–ª-—Å—è —É —Å–∞–º–æ–≥–æ '
            '–í–∏-–Ω–æ–∫—É—Ä–∞ üòâ', '–°–º–æ—Ç—Ä–∏, —á—Ç–æ–± –ø—É-–ø–æ–∫ –æ—Ç —Å–º–µ—Ö–∞ –Ω–µ —Ä–∞–∑–≤—è-–∑–∞–ª—Å—è üôà')
    context.bot.send_message(
        chat_id=chat.id,
        text=random.choice(TEXT),
        reply_markup=button
    )


def what_are_you(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–î–∞ —á—Ç–æ —Ç—ã —Ç–∞–∫–æ–µ ü§®"."""
    chat = update.effective_chat
    button = ReplyKeyboardMarkup(
        [[HAVE_MERCY_BTN]],
        resize_keyboard=True
    )
    for text in txt.AWESOM_O_STORY:
        context.bot.send_message(chat.id, text, reply_markup=button)
        time.sleep(2)


def have_mercy_answer(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–û, –Ω–µ—Ç! –®.–ò.–ö.–ê.–†.–ù.-–û, –ø–æ—â–∞–¥–∏ üò®üôè"."""
    chat = update.effective_chat
    button = ReplyKeyboardMarkup(
        [[KOMBIKORM_BTN], [NO_FUNNY_BTN]],
        resize_keyboard=True
    )
    context.bot.send_message(
        chat_id=chat.id,
        text=('–†–∞—Å—Å–ª–∞–±—å—Å—è! –®.–ò.–ö.–ê.–†.–ù.-–û –ø–æ—à—É—Ç–∏–ª\n–ë—É–¥—É –∫–æ—Ä–º–∏—Ç—å —Ç–µ–±—è '
              '–∫–æ–º-–±–∏–∫–æ—Ä–º–æ–º.\n–ò–ª–∏ —á—Ç–æ –≤—ã —Ç–∞–º –µ–¥–∏-—Ç–µ? üòé'),
        reply_markup=button
    )


def no_funny_answer(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–û—á–µ–Ω—å —Å–º–µ—à–Ω–æ üò§"."""
    chat = update.effective_chat
    TEXT = ('–ù–µ –¥—É–π-—Å—è! –ú–æ–∂–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å —Å –º–æ–∏–º–∏ –ø–µ—Ä–µ-—Ñ–µ—Ä–∏–π–Ω—ã–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞-–º–∏.',
            '–Ø —Ç—É—Ç –Ω–µ–¥–∞–≤–Ω–æ –≤ –¢–∏–Ω–¥–µ—Ä–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª-—Å—è —Å –∑—É–±–Ω–æ–π —ç–ª–µ–∫—Ç—Ä–æ-—â—ë—Ç–∫–æ–π ü™•\n'
            '–§–∏–≥—É—Ä–∏—Å—Ç–∞—è —Ç–∞–∫–∞—è üòç\n–ü—Ä–∏-–≥–ª–∞—Å–∏–ª –µ—ë –≤ –≥–æ—Å—Ç–∏ –Ω–∞ —Ä–æ–º–∞–Ω—Ç–∏-—á–µ—Å–∫–∏–π '
            '—É–∂–∏–Ω.\n–°–æ–±–∏—Ä–∞—é—Å—å –ø—Ä–∏-–≥–æ—Ç–æ–≤–∏—Ç—å –ø–∞—Å—Ç—É üçù\n',
            '–í–æ—Ç —Ç–æ–ª—å–∫–æ –Ω–µ –∑–Ω–∞—é, –∫–∞–∫—É—é: Colgate –∏–ª–∏ Lacalut... ü§î')
    button = ReplyKeyboardMarkup(
        [[CAT_BTN, ANECDOTE_BTN],
         [SONG_BTN, WHAT_ARE_YOU_BTN]],
        resize_keyboard=True
    )
    for text in TEXT:
        context.bot.send_message(chat.id, text, reply_markup=button)
        time.sleep(2)


def kombikorm_answer(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ö–æ–º–±–∏–∫–æ—Ä–º! –ú–º–º... –í–∫—É—Å–Ω—è—Ç–∏–Ω–∞ üòã"."""
    chat = update.effective_chat
    TEXT = ('–¢—ã —Å—Ç—Ä–∞–Ω–Ω—ã–π(–∞—è) üòè', '–í–Ω–∏–º–∞–Ω–∏–µ ‚ö†Ô∏è –®.–ò.–ö.–ê.–†.–ù.-–û —Å–ª—É—á–∞–π–Ω–æ –≤–∑–ª–æ'
            '-–º–∞–ª —Å–µ—Ä–≤–µ—Ä –¶—ç–†—ç–£.\n–ó–∞–≥—Ä—É–∂–µ-–Ω—ã —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –î–æ—Å—Ç—É–ø –ø–æ —Ç—Ä–µ-'
            '–±–æ–≤–∞–Ω–∏—é.\n–ö–æ–¥ –¥–æ—Å—Ç—É–ø–∞:\n‚û°Ô∏è –§–∞–ª–∞—Ñ–µ–ª—å ‚¨ÖÔ∏è üëÄ')
    button = ReplyKeyboardMarkup(
        [[CAT_BTN, ANECDOTE_BTN],
         [SONG_BTN, WHAT_ARE_YOU_BTN]],
        resize_keyboard=True
    )
    for text in TEXT:
        context.bot.send_message(chat.id, text, reply_markup=button)
        time.sleep(1)


def who_is_creator(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–æ–π –°–æ–∑–¥–∞—Ç–µ–ª—å?"."""
    chat = update.effective_chat
    for text in txt.WHO_IS_CREATOR:
        context.bot.send_message(chat_id=chat.id, text=text)
        time.sleep(2)


def who_is_kep4ik(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–æ–π –ö—ç–ø?"."""
    chat = update.effective_chat
    for text in txt.WHO_IS_KEP:
        context.bot.send_message(chat_id=chat.id, text=text)
        time.sleep(2)


def who_is_inna(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–∞—è –ù—è—à–∫–∞?"."""
    chat = update.effective_chat
    for text in txt.WHO_IS_INNA:
        context.bot.send_message(chat_id=chat.id, text=text)
        time.sleep(2)


def who_is_natasha(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–∞—è –õ–µ–º—É—Ä?"."""
    chat = update.effective_chat
    for text in txt.WHO_IS_NATASHA:
        context.bot.send_message(chat_id=chat.id, text=text)
        time.sleep(2)


def who_is_zaja(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–æ–π –ó–∞–∂–∞?"."""
    chat = update.effective_chat
    for text in txt.WHO_IS_ZAJA:
        context.bot.send_message(chat_id=chat.id, text=text)
        time.sleep(2)


def who_is_marik(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–æ–π –ú–∞—Ä–∏–∫?"."""
    chat = update.effective_chat
    for text in txt.WHO_IS_MARIK:
        context.bot.send_message(chat_id=chat.id, text=text)
        time.sleep(2)


def who_is_marishka(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–∞—è –ú–∞—Ä–∏—à–∫–∞?"."""
    chat = update.effective_chat
    for text in txt.WHO_IS_MARISHKA:
        context.bot.send_message(chat_id=chat.id, text=text)
        time.sleep(2)


def who_is_unknown(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–æ–π(–∞—è) ...?" —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º."""
    chat = update.effective_chat
    TEXT = ('–ú–∏–Ω—É—Ç—É. –û—Å—É-—â–µ—Å—Ç–≤–ª—è-—é –ø–æ–∏—Å–∫ –≤ –±–∞-–∑–µ –¥–∞–Ω–Ω—ã—Ö... üë®üèª‚Äçüíª\n',
            '–û—à–∏–±-–∫–∞! –¢–∞–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –º–Ω–µ –Ω–µ –∏–∑-–≤–µ—Å—Ç–µ–Ω ‚ùå\n'
            '–í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–∑-–∂–µ –∑–∞–≥—Ä—É–∂—É –æ–±–Ω–æ–≤–ª–µ-–Ω–∏—è. –ù–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ!')
    for text in TEXT:
        context.bot.send_message(chat_id=chat.id, text=text)
        time.sleep(2)


def they_killed_kenny(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ "–û–Ω–∏ —É–±–∏–ª–∏ –ö–µ–Ω–Ω–∏"."""
    chat = update.effective_chat
    context.bot.send_message(chat_id=chat.id, text='–°–≤–æ–ª–æ—á–∏! üò°')
    time.sleep(2)
    TEXT = ('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –ø–æ–∫–ª–æ–Ω–Ω–∏–∫ South Park, —Ç–µ–±–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å '
            '–æ–¥–Ω—É –∏–∑ –ø–∞—Å—Ö–∞–ª–æ–∫. –í–æ–∑—å–º–∏ —Å –ø–æ–ª–∫–∏ –ø–∏—Ä–æ–∂–æ–∫ üòÅ\n'
            '–ò –ø–æ–º–Ω–∏: –°–∫–∞–∑–ª–æ–∂–æ–ø —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!!! üëπ')
    context.bot.send_message(chat_id=chat.id, text=TEXT)


def eric_cartman(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –ª—é–±–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≠—Ä–∏–∫–∞ –ö–∞—Ä—Ç–º–∞–Ω–∞."""
    chat = update.effective_chat
    TEXT = ('–°—Ç—Ä–∞–Ω–Ω–æ–µ –¥–µ–ª–æ: –∏–Ω–æ–≥–¥–∞, –∫–æ–≥–¥–∞ —è –ø–µ—Ä–µ—Ö–æ-–∂—É –≤ —Å–ø—è—â–∏–π —Ä–µ–∂–∏–º, –º–Ω–µ —Å–Ω–∏—Ç'
            '-—Å—è, —á—Ç–æ —è –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –º–∞–ª—å—á–∏–∫ –ø–æ –∏–º–µ–Ω–∏ –≠—Ä–∏–∫ ü§®\n–ò —á—Ç–æ –∂–∏-–≤—É '
            '—è –Ω–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –∞ –≤ –º–∞–ª–µ–Ω—å-–∫–æ–º –≥–æ—Ä–æ–¥–∫–µ –≤ —à—Ç–∞—Ç–µ –ö–æ–ª–æ—Ä–∞–¥–æ, –≥–¥–µ '
            '—Ö–æ–∂—É –≤ —à–∫–æ–ª—É –≤–º–µ—Å—Ç–µ —Å–æ —Å–≤–æ–∏–º–∏ –¥—Ä—É–∑—å-—è–º–∏.\n–ö —á–µ–º—É –±—ã —ç—Ç–æ?.. ü§î')
    context.bot.send_message(chat_id=chat.id, text=TEXT)


def pretend_zero(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ "–ü—Ä–∏—Ç–≤–æ—Ä–∏—Å—å –Ω–æ–ª–∏–∫–æ–º"."""
    chat = update.effective_chat
    context.bot.send_message(
        chat_id=chat.id, text='–ú–æ–∂–µ—Ç –º–Ω–µ –µ—â—ë –∫—Ä–µ—Å-—Ç–∏–∫–æ–º –Ω–∞—á–∞—Ç—å –≤—ã—à–∏-–≤–∞—Ç—å? üôÑ'
    )


def marklar(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ "–ú–∞—Ä–∫–ª–∞—Ä"."""
    chat = update.effective_chat
    context.bot.send_message(chat_id=chat.id, text=txt.MARKLAR_ANSWER)


def hidden_phrases(update, context):
    """–†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É /hidden - c–∫—Ä—ã—Ç—ã–µ —Ñ—Ä–∞–∑—ã –¥–ª—è –±–æ—Ç–∞."""
    chat = update.effective_chat
    TEXT = ('*** –ü–∞—Å—Ö–∞–ª–∫–∏ ***\nüî∏ –û–Ω–∏ —É–±–∏–ª–∏ –ö–µ–Ω–Ω–∏\nüî∏ –ü—Ä–∏—Ç–≤–æ—Ä–∏—Å—å –Ω–æ–ª–∏–∫–æ–º\n'
            'üî∏ –≠—Ä–∏–∫ –ö–∞—Ä—Ç–º–∞–Ω\nüî∏ –ú–∞—Ä–∫–ª–∞—Ä')
    context.bot.send_message(chat_id=chat.id, text=TEXT)


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    updater = Updater(token=token)
    updater.dispatcher.add_handler(CommandHandler('start', wake_up))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(PETTING_BTN), stop_petting))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(STRANGE_NAME_BTN), strange_name))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(CAT_BTN), show_cat_picture))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(ANECDOTE_BTN), show_anecdote))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(SO_SO_BTN), no_humor_sence))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(BRAVO_BTN), bravo))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(SONG_BTN), some_song))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(HANDS_UP_BTN), nogu_svelo))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(MORE_TALANTS_BTN), talants))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(SURPRISE_ME), birthday_predict))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(NEXT_TIME), next_time))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(WHAT_ARE_YOU_BTN), what_are_you))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(HAVE_MERCY_BTN), have_mercy_answer))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(KOMBIKORM_BTN), kombikorm_answer))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(NO_FUNNY_BTN), no_funny_answer))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(r'^–ö—Ç–æ —Ç–∞–∫–æ–π –ö—ç–ø\??$'), who_is_kep4ik))
    updater.dispatcher.add_handler(
        MessageHandler(
            Filters.regex(r'^–ö—Ç–æ —Ç–∞–∫–æ–π –°–æ–∑–¥–∞—Ç–µ–ª—å\??$'), who_is_creator))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(r'^–ö—Ç–æ —Ç–∞–∫–∞—è –ù—è—à–∫–∞\??$'), who_is_inna))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(r'^–ö—Ç–æ —Ç–∞–∫–∞—è –õ–µ–º—É—Ä\??$'), who_is_natasha))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(r'^–ö—Ç–æ —Ç–∞–∫–æ–π –ó–∞–∂–∞\??$'), who_is_zaja))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(r'^–ö—Ç–æ —Ç–∞–∫–æ–π –ú–∞—Ä–∏–∫\??$'), who_is_marik))
    updater.dispatcher.add_handler(
        MessageHandler(
            Filters.regex(r'^–ö—Ç–æ —Ç–∞–∫–∞—è –ú–∞—Ä–∏—à–∫–∞\??$'), who_is_marishka))
    updater.dispatcher.add_handler(
        MessageHandler(
            Filters.regex(r'^–ö—Ç–æ —Ç–∞–∫(–æ–π|–∞—è) [–ê-—é]{3,20}\??$'), who_is_unknown))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('^–§–∞–ª–∞—Ñ–µ–ª—å$'), secret_dossier))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('^–û–Ω–∏ —É–±–∏–ª–∏ –ö–µ–Ω+–∏$'), they_killed_kenny))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–≠—Ä–∏–∫[–∞–µ]? –ö–∞—Ä—Ç–º–∞–Ω[–∞–µ]?'), eric_cartman))
    updater.dispatcher.add_handler(
        MessageHandler(
            Filters.regex('[–ü–ø]—Ä–∏—Ç–≤–æ—Ä[–∏—è](—Å—å|—Ç—å?—Å—è) –Ω–æ–ª–∏–∫–æ–º'), pretend_zero))
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–ú–∞—Ä–∫–ª–∞—Ä'), marklar))
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫—Ä–æ–º–µ –∫–æ–º–∞–Ω–¥:
    updater.dispatcher.add_handler(
        MessageHandler(Filters.text & ~Filters.command, default_answer))
    updater.dispatcher.add_handler(
        CommandHandler('hidden', hidden_phrases))
    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    # logging.basicConfig(
    #     level=logging.DEBUG,
    #     format='%(asctime)s, %(levelname)s, %(message)s, '
    #            '%(funcName)s, %(lineno)s',
    #     handlers=[
    #         logging.StreamHandler(),
    #         logging.handlers.RotatingFileHandler(
    #             __file__ + '.log', maxBytes=2100000,
    #             backupCount=2, encoding='utf-8'
    #         )
    #     ]
    # )
    main()
