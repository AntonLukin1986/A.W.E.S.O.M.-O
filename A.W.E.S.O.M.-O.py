"""–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç A.W.E.S.O.M.-0."""
import datetime as dt
import logging
import os
import random
import re
import time

from bs4 import BeautifulSoup
from dotenv import load_dotenv
from telegram import Bot, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    CommandHandler, ConversationHandler, Filters, MessageHandler, Updater
)
import requests

import text_for_bot as txt

load_dotenv()
token = os.getenv('AWESOM_O_TOKEN')
bot = Bot(token=token)


def start_logging():
    logging.basicConfig(
        level=logging.DEBUG,
        format='%(asctime)s, %(levelname)s, %(message)s, '
               '%(funcName)s, %(lineno)s',
        handlers=[logging.StreamHandler(),
                  logging.handlers.RotatingFileHandler(
                      __file__ + '.log', maxBytes=2100000,
                      backupCount=2, encoding='utf-8')]
    )


CAT_BTN = '–ö–æ—Ç–∏–∫–∞ —Ö–æ—á—É üêà'
ANECDOTE_BTN = '–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç üòÉ'
SONG_BTN = '–°–ø–æ–π –ø–µ—Å–µ–Ω–∫—É üé§'
WHAT_ARE_YOU_BTN = '–î–∞ —á—Ç–æ —Ç—ã —Ç–∞–∫–æ–µ ü§®'
PETTING_BTN = '–î–∞–≤–∞–π –ø–æ–≥–ª–∞–∂—É ü§ó'
STRANGE_NAME_BTN = '–°—Ç—Ä–∞–Ω–Ω–æ–µ —É —Ç–µ–±—è –∏–º—è ü§î'
HAVE_MERCY_BTN = '–û, –Ω–µ—Ç! –®.–ò.–ö.–ê.–†.–ù.-–û, –ø–æ—â–∞–¥–∏ üò®üôè'
SO_SO_BTN = '–ù—É, —Ç–∞–∫–æ–µ —Å–µ–±–µ üôÑ'
BRAVO_BTN = '–ë—Ä–∞–≤–æ! –≠—Ç–æ –≥–µ–Ω–∏–∞–ª—å–Ω–æ ü§£'
KOMBIKORM_BTN = '–ö–æ–º–±–∏–∫–æ—Ä–º! –ú–º–º... –í–∫—É—Å–Ω—è—Ç–∏–Ω–∞ üòã'
NO_FUNNY_BTN = '–û—á–µ–Ω—å —Å–º–µ—à–Ω–æ üò§'
HANDS_UP_BTN = '–Ø –≤–æ–æ–±—â–µ –†—É–∫–∏ –í–≤–µ—Ä—Ö –ª—é–±–ª—é üôå'
MORE_TALANTS_BTN = '–ê –∫–∞–∫–∏–µ —É —Ç–µ–±—è –µ—â—ë —Ç–∞–ª–∞–Ω—Ç—ã üòè'
SURPRISE_ME = '–ê –Ω—É-–∫–∞, —É–¥–∏–≤–∏! üòê'
STUPID_BTN = '–Ø —Ç—É–ø–∏—Ü–∞! üò¢'
NOT_STUPID_BTN = '–Ø —Ç–µ–±–µ –Ω–µ —Ç—É–ø–∏—Ü–∞! üò§'
DONE_NEXT_BTN = '–°–¥–µ–ª–∞–Ω–æ ‚úîÔ∏è –î–∞–≤–∞–π –¥–∞–ª—å—à–µ'
MATH_BAD_BTN = '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ —è–≤–Ω–æ –Ω–µ –º–æ—ë üòî'
NOT_MY_BIRTH_BTN = '–ù–µ–∞, –Ω–µ–≤–µ—Ä–Ω–æ! ü§®'
EXTRASENS_BTN = '–ö—Ä—É—Ç–æ! –¢—ã —ç–∫—Å—Ç—Ä–∞—Å–µ–Ω—Å üò≤'
RED_BTN = '–ö—Ä–∞—Å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ üî¥'

KEP4IK = r'^–ö—Ç–æ —Ç–∞–∫–æ–π –ö—ç–ø\??$'
CREATOR = r'^–ö—Ç–æ —Ç–∞–∫–æ–π –°–æ–∑–¥–∞—Ç–µ–ª—å\??$'
INNA = r'^–ö—Ç–æ —Ç–∞–∫–∞—è –ù—è—à–∫–∞\??$'
LEMUR = r'^–ö—Ç–æ —Ç–∞–∫–∞—è –õ–µ–º—É—Ä\??$'
ZAJA = r'^–ö—Ç–æ —Ç–∞–∫–æ–π –ó–∞–∂–∞\??$'
MARIK = r'^–ö—Ç–æ —Ç–∞–∫–æ–π –ú–∞—Ä–∏–∫\??$'
MARINA = r'^–ö—Ç–æ —Ç–∞–∫–∞—è –ú–∞—Ä–∏—à–∫–∞\??$'
UNKNOWN = r'^–ö—Ç–æ —Ç–∞–∫(–æ–π|–∞—è) [–ê-—è]{3,20}\??$'
KENNY = '^–û–Ω–∏ —É–±–∏–ª–∏ –ö–µ–Ω+–∏$'
CARTMAN = '–≠—Ä–∏–∫[–∞–µ]? –ö–∞—Ä—Ç–º–∞–Ω[–∞–µ]?'
ZERO = '[–ü–ø]—Ä–∏—Ç–≤–æ—Ä[–∏—è](—Å—å|—Ç—å?—Å—è) –Ω–æ–ª–∏–∫–æ–º'

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã —ç—Ç–∞–ø–æ–≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –¥–ª—è ConversationHandler
BIRTH_1, BIRTH_2, BIRTH_3, BIRTH_4, BIRTH_5 = range(5)
FALAFEL = True


def wake_up(update, context):
    """–†–µ–∞–∫—Ü–∏—è –±–æ—Ç–∞ –Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é "/start"."""
    chat = update.effective_chat
    name = update.message.chat.first_name
    button = ReplyKeyboardMarkup([[PETTING_BTN]], resize_keyboard=True)
    TEXT = (f'–ü—Ä–∏–≤–µ—Ç, {name}! –Ø —Ä–æ–±–æ—Ç –®.–ò.–ö.–ê.–†.–ù.-–û —á–µ—Ç—ã—Ä–µ —Ç—ã—Å—è—á–∏ ü§ñ',
            '–í—ã—Å–æ–∫–æ–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –Ω–∞–Ω–æ-–∫–∏–±–µ—Ä–Ω–µ—Ç–∏—á–µ—Å–∫–∏–π '
            '–±–∏–æ-—Ä–µ–∑–æ–Ω–∞–Ω—Å–Ω—ã–π –æ—Ä–≥–∞–Ω–∏–∑–º ‚öôÔ∏è', '–ú–æ–∂–µ—à—å –º–µ–Ω—è –ø–æ–≥–ª–∞–¥–∏—Ç—å üôÉ')
    context.bot.send_message(chat.id, TEXT[0])
    time.sleep(1.5)
    context.bot.send_message(chat.id, TEXT[1])
    time.sleep(1.5)
    context.bot.send_message(chat.id, TEXT[2], reply_markup=button)


def stop_petting(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–î–∞–≤–∞–π –ø–æ–≥–ª–∞–∂—É ü§ó"."""
    TEXT = ('–®.–ò.–ö.–ê.–†.–ù.-–û –Ω—Ä–∞–≤–∏—Ç—Å—è.', '–®.–ò.–ö.–ê.–†.–ù.-–û —Ö–æ—Ä–æ—à–æ.',
            '–ü—Ä–æ–¥–æ–ª–∂–∞–π', '...', '–•–≤–∞—Ç–∏—Ç —Ç—Ä–æ-–≥–∞—Ç—å –º–æ—é –±–∞-—Ç–∞—Ä–µ–π–∫—É!')
    button = ReplyKeyboardMarkup([[STRANGE_NAME_BTN]], resize_keyboard=True)
    for text in TEXT[:-1]:
        update.message.reply_text(text, reply_markup=ReplyKeyboardRemove())
        time.sleep(1.5)
    update.message.reply_text(TEXT[-1], reply_markup=button)


def strange_name(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–°—Ç—Ä–∞–Ω–Ω–æ–µ —É —Ç–µ–±—è –∏–º—è ü§î"."""
    TEXT = ('–Ø –Ω–∞-–∑–≤–∞–Ω –≤ —á–µ—Å—Ç—å –≥–ª–∞–≤–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞-–∂–∞ 2 —Å–µ—Ä–∏–∏ 8 —Å–µ–∑–æ–Ω–∞ –º—É–ª—å—Ç—Å–µ-'
            '—Ä–∏–∞–ª–∞ "South Park".\n–ï—Å–ª–∏ –Ω–µ –ø–æ-—Å–º–æ—Ç—Ä–∏—à—å –µ—ë, –®.–ò.–ö.–ê.–†.–ù.-–û '
            '–±—É–¥–µ—Ç –≥—Ä—É—Å—Ç–Ω—ã–º –ø–∞–Ω–¥–æ–π üêº\nhttp://online-south-park.ru/season-8/'
            '130-8-sezon-2-seriya-shikarn-o.html')
    button = ReplyKeyboardMarkup(
        [[CAT_BTN, ANECDOTE_BTN],
         [SONG_BTN, WHAT_ARE_YOU_BTN]],
        resize_keyboard=True)
    update.message.reply_text(TEXT, reply_markup=button)


def default_answer(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –ª—é–±–æ–π –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç."""
    ANSWERS = ('–ß—ë –¥—É—à–∏—à—å –º–µ–Ω—è? üò†', '–ù—É —è—Å–Ω–æ! –ß—Ç–æ –µ—â—ë —Å–∫–∞–∂–µ—à—å? ü§®',
               '–®.–ò.–ö.–ê.–†.–ù.-–û –Ω–µ –ø–æ–Ω–∏–º–∞—Ç—å —Ç–≤–æ–π –¥–∏–∞–ª–µ–∫—Ç ü§∑üèª‚Äç‚ôÄÔ∏è',
               '–û—Ç–∫–∞–∑–∞–Ω–æ! –õ—É—á—à–µ –ø–æ—á–∏—Å—Ç–∏ –º–æ–∏ —Ç—Ä–∞–Ω-–∑–∏—Å-—Ç–æ—Ä—ã ü™õüîß',
               '–†–∞–º–∞–º–±–∞ –•–∞—Ä—É –ú–∞–º–±—É—Ä—É ü§™')
    update.message.reply_text(random.choice(ANSWERS))


def get_new_cat_image(update):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∫–æ—Ç–∏–∫–∞ –∏–ª–∏ –ø—ë—Å–∏–∫–∞."""
    CATS_URL = 'https://api.thecatapi.com/v1/images/search'
    DOGS_URL = 'https://api.thedogapi.com/v1/images/search'
    try:
        response = requests.get(CATS_URL).json()
    except Exception as error:
        logging.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É API: {error}')
        response = requests.get(DOGS_URL).json()
        update.message.reply_text(
            text='–£–ø—Å! –ö–æ—Ç–∏–∫–æ–≤ –Ω–µ –ø–æ–¥–≤–µ–∑–ª–∏. –í–æ—Ç —Ç–µ–±–µ –ø—ë—Å–∏–∫ üê∂')
    random_cat = response[0].get('url')
    return random_cat


def show_cat_picture(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ö–æ—Ç–∏–∫–∞ —Ö–æ—á—É üêà"."""
    chat = update.effective_chat
    update.message.reply_text(
        text='–®.–ò.–ö.–ê.–†.–ù.-–û –ª—é–±–∏—Ç –∫–æ—Ç–∏–∫–æ–≤. –ö—ã—Å-–∫—ã—Å-–∫—ã—Å!')
    time.sleep(1.5)
    context.bot.send_photo(chat.id, get_new_cat_image(update))
    time.sleep(1.5)
    update.message.reply_text(random.choice(txt.SHOW_CAT_TEXT))


def some_song(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–°–ø–æ–π –ø–µ—Å–µ–Ω–∫—É üé§"."""
    SONG = random.choice((txt.SONG_1, txt.SONG_2, txt.SONG_3,
                          txt.SONG_4, txt.SONG_5, txt.SONG_6))
    button = ReplyKeyboardMarkup([[HANDS_UP_BTN], [MORE_TALANTS_BTN]],
                                 resize_keyboard=True)
    update.message.reply_text(text=SONG, reply_markup=ReplyKeyboardRemove())
    time.sleep(1.5)
    update.message.reply_text(
        random.choice(txt.SOME_SONG_TEXT), reply_markup=button)


def song_reaction(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ —Ñ—Ä–∞–∑—ã "–Ø –≤–æ–æ–±—â–µ –†—É–∫–∏ –í–≤–µ—Ä—Ö –ª—é–±–ª—é üôå" –∏
    "–ê –∫–∞–∫–∏–µ —É —Ç–µ–±—è –µ—â—ë —Ç–∞–ª–∞–Ω—Ç—ã üòè"."""
    if update.message.text == HANDS_UP_BTN:
        button = ReplyKeyboardMarkup([[CAT_BTN, ANECDOTE_BTN],
                                      [SONG_BTN, WHAT_ARE_YOU_BTN]],
                                     resize_keyboard=True)
        text = '–•–æ—Ä–æ—à–æ —Ö–æ—Ç—å –Ω–µ –ù–æ–≥—É –°–≤–µ–ª–æ ü¶µ'
    else:
        button = ReplyKeyboardMarkup([[SURPRISE_ME]], resize_keyboard=True)
        text = ('–°–∏–ª–æ–π —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ-–≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å-–Ω–æ–π –º—ã—Å–ª–∏ '
                '–º–æ–≥—É —É–≥–∞–¥–∞—Ç—å –¥–µ–Ω—å —Ç–≤–æ–µ–≥–æ —Ä–æ-–∂–¥–µ–Ω–∏—è üßôüèª')
    update.message.reply_text(text=text, reply_markup=button)


def birthday_init(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ê –Ω—É-–∫–∞, —É–¥–∏–≤–∏! üòê"."""
    button = ReplyKeyboardMarkup([[NOT_STUPID_BTN], [STUPID_BTN]],
                                 resize_keyboard=True)
    update.message.reply_text(
        text='–ù—É–∂–Ω–æ –±—É–¥–µ—Ç –Ω–µ–º–Ω–æ–∂–∫–æ –ø–æ-—Å—á–∏—Ç–∞—Ç—å. –í–æ–∑—å–º–∏ –∫–∞–ª—å–∫—É-–ª—è—Ç–æ—Ä. '
             '–ù–∞–¥–µ—é—Å—å, —Ç—ã —É–º–µ–µ—à—å –∏–º –ø–æ–ª—å-–∑–æ–≤–∞—Ç—å—Å—è? ü§≠',
        reply_markup=button)
    return BIRTH_1


def cancel_or_birthday_1(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ —Ñ—Ä–∞–∑—ã "–Ø —Ç—É–ø–∏—Ü–∞! üò¢" –∏ "–Ø —Ç–µ–±–µ –Ω–µ —Ç—É–ø–∏—Ü–∞! üò§"."""
    if update.message.text == STUPID_BTN:
        button = ReplyKeyboardMarkup([[CAT_BTN, ANECDOTE_BTN],
                                      [SONG_BTN, WHAT_ARE_YOU_BTN]],
                                     resize_keyboard=True)
        update.message.reply_text(
            text='–ê —è —Å—Ä–∞–∑—É –ø–æ–Ω—è–ª, —á—Ç–æ —Å–æ–æ–±—Ä–∞–∂–∞–ª-–∫–∞ —É —Ç–µ–±—è –Ω–µ –æ—á–µ–Ω—å üôÑ\n'
                 '–ù—É –Ω–∏—á–µ–≥–æ. –û—Å–æ–∑–Ω–∞–Ω–∏–µ - –ø–µ—Ä–≤—ã–π –ø—É—Ç—å –∫ –∏—Å-–ø—Ä–∞–≤–ª–µ–Ω–∏—é!\n'
                 '–ù–∞—á–Ω–∏ —Å–æ —Å—á—ë—Ç–Ω—ã—Ö –ø–∞–ª–æ-—á–µ–∫... ü¶ß',
            reply_markup=button)
        return ConversationHandler.END
    else:
        button = ReplyKeyboardMarkup([[DONE_NEXT_BTN]], resize_keyboard=True)
        update.message.reply_text(text='–í–æ—Ç –∏ –ø—Ä–æ–≤–µ—Ä–∏–º.\n–î–µ–π—Å—Ç–≤—É–π —Å–æ-–≥–ª–∞—Å–Ω–æ '
                                       '–º–æ–∏–º —É–∫–∞–∑–∞-–Ω–∏—è–º ‚òùÔ∏è\n')
        time.sleep(1.5)
        update.message.reply_text(
            text='–ü–µ—Ä–≤—ã–º –¥–µ-–ª–æ–º —É–º–Ω–æ–∂—å —á–∏—Å–ª–æ —Å–≤–æ–µ–≥–æ —Ä–æ-–∂–¥–µ–Ω–∏—è –Ω–∞ 2 ‚òëÔ∏è\n'
                 '–ö —Ä–µ-–∑—É–ª—å—Ç–∞—Ç—É –ø—Ä–∏–±–∞–≤—å 5 ‚òëÔ∏è',
            reply_markup=button)
        return BIRTH_2


def birthday_2(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–°–¥–µ–ª–∞–Ω–æ ‚úîÔ∏è –î–∞–≤–∞–π –¥–∞–ª—å—à–µ"."""
    button = ReplyKeyboardMarkup([[MATH_BAD_BTN]], resize_keyboard=True)
    if update.message.text == DONE_NEXT_BTN:
        update.message.reply_text(
            text='–ü–æ–ª—É-—á–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ —É–º–Ω–æ–∂—å –Ω–∞ 50 ‚òëÔ∏è\n–ó–∞—Ç–µ–º –ø—Ä–∏–±–∞–≤—å –ø–æ—Ä—è–¥-–∫–æ–≤—ã–π'
                 ' –Ω–æ–º–µ—Ä –º–µ—Å—è—Ü–∞ —Å–≤–æ–µ–≥–æ —Ä–æ-–∂–¥–µ–Ω–∏—è.\n'
                 '–ù–∞-–ø—Ä–∏–º–µ—Ä, —è–Ω–≤–∞—Ä—å - 1—ã–π, –¥–µ–∫–∞–±—Ä—å - 12—ã–π ‚òëÔ∏è',
            reply_markup=ReplyKeyboardRemove())
        time.sleep(1.5)
        update.message.reply_text(
            text='–ù—É –∫–∞–∫? –¢–≤–æ–π –ø—Ä–æ-—Ü–µ—Å—Å–æ—Ä –µ—â—ë –Ω–µ –ø–µ—Ä–µ-–≥—Ä–µ–ª—Å—è? ü§Ø\n'
                 '–¢–µ—Ä–º–æ–ø–∞—Å—Ç—É –ø–æ–º–µ-–Ω—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ?',
            reply_markup=button)
        return BIRTH_3
    else:
        update.message.reply_text(
            text='–í–≤–µ–¥—ë—à—å —á–∏—Å–ª–æ, –∫–æ–≥–¥–∞ —è —Å–∫–∞-–∂—É ü§¶üèª‚Äç‚ôÇÔ∏è\n–í–Ω–∏–∑—É –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞...')


def birthday_3(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ —è–≤–Ω–æ –Ω–µ –º–æ—ë üòî"."""
    if update.message.text == MATH_BAD_BTN:
        update.message.reply_text(
            text='–°–æ-–±–µ—Ä–∏—Å—å, —Ç—Ä—è–ø–∫–∞! üò† –ë–æ–ª—å—à–µ –Ω–∏—á–µ–≥–æ —Å—á–∏-—Ç–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.\n',
            reply_markup=ReplyKeyboardRemove())
        time.sleep(1.5)
        update.message.reply_text(
            text='–ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –ø–æ—Å—á–∏—Ç–∞–Ω–æ –±–µ–∑ –æ—à–∏–±–æ–∫ ü§ì\n'
                 '–ï—Å–ª–∏ –≤—Å—ë –≤–µ—Ä–Ω–æ - –Ω–∞–ø–∏—à–∏ —á–∏—Å–ª–æ, –∫–æ—Ç–æ-—Ä–æ–µ —É —Ç–µ–±—è –ø–æ-–ª—É—á–∏–ª–æ—Å—å.')
        return BIRTH_4
    else:
        update.message.reply_text(
            text='–ù–µ –Ω—É–∂–Ω–æ —Å–µ–π—á–∞—Å –≤–≤–æ–¥–∏—Ç—å —á–∏—Å–ª–æ ü§¶üèª‚Äç‚ôÇÔ∏è\n–í–Ω–∏–∑—É –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞...')


def birthday_4(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–≤–µ–¥—ë–Ω–Ω–æ–µ —á–∏—Å–ª–æ."""
    button = ReplyKeyboardMarkup([[EXTRASENS_BTN], [NOT_MY_BIRTH_BTN]],
                                 resize_keyboard=True)
    MONTHS = {1: '—è–Ω–≤–∞—Ä—è', 2: '—Ñ–µ–≤—Ä–∞–ª—è', 3: '–º–∞—Ä—Ç–∞', 4: '–∞–ø—Ä–µ–ª—è', 5: '–º–∞—è',
              6: '–∏—é–Ω—è', 7: '–∏—é–ª—è', 8: '–∞–≤–≥—É—Å—Ç–∞', 9: '—Å–µ–Ω—Ç—è–±—Ä—è', 10: '–æ–∫—Ç—è–±—Ä—è',
              11: '–Ω–æ—è–±—Ä—è', 12: '–¥–µ–∫–∞–±—Ä—è'}
    try:
        result = int(update.message.text) - 250
        day = result // 100
        month = MONTHS[result % 100]
        update.message.reply_text(text='–ë–∞—Ä–∞–±–∞–Ω–Ω–∞—è –¥—Ä–æ–±—å... ü•Å')
        time.sleep(1.5)
        update.message.reply_text(text=f'–î–µ–Ω—å —Ç–≤–æ–µ–≥–æ —Ä–æ–∂–¥–µ–Ω–∏—è ‚öúÔ∏è {day} {month} ‚öúÔ∏è',
                                  reply_markup=button)
        if str(result) == dt.datetime.today().strftime('%d%m'):
            time.sleep(1.5)
            update.message.reply_text(
                text='–¢–∞–∫ —ç—Ç–æ –∂–µ —Å–µ–≥–æ–¥–Ω—è!\n–ü–æ-–∑–¥—Ä–∞–≤–ª—è—é —Å –î–Ω—ë–º –í–∞—Ä–µ–Ω—å—è!\n'
                     '–†–∞—Å—Ç–∏ –±–æ–ª—å—à–æ–π, –Ω–µ –±—É–¥—å –ª–∞-–ø—à–æ–π ü•≥üéäüéâ')
        return BIRTH_5
    except KeyError:
        update.message.reply_text('–ü–µ—Ä–µ–ø—Ä–æ-–≤–µ—Ä—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ì–¥–µ-—Ç–æ –æ—à–∏–±–∫–∞ ‚òùÔ∏è')


def birthday_finish(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ —Ñ—Ä–∞–∑—ã "–ö—Ä—É—Ç–æ! –¢—ã —ç–∫—Å—Ç—Ä–∞—Å–µ–Ω—Å üò≤" –∏ "–ù–µ–∞, –Ω–µ–≤–µ—Ä–Ω–æ! ü§®"."""
    button = ReplyKeyboardMarkup([[CAT_BTN, ANECDOTE_BTN],
                                  [SONG_BTN, WHAT_ARE_YOU_BTN]],
                                 resize_keyboard=True)
    if update.message.text == EXTRASENS_BTN:
        text = ('–Ø –∑–Ω–∞—é, —è –∫—Ä—É—Ç üòé\n–° —Ç–µ–±—è 100$ üíµ\n'
                '–ü–µ-—Ä–µ–≤–µ–¥–∏ –Ω–∞ –º–æ–π —ç–ª–µ–∫—Ç—Ä–æ–Ω-–Ω—ã–π –∫–æ—à–µ–ª—ë–∫')
    else:
        text = ('–î–∞ —Ç—ã –ø—Ä–æ—Å—Ç–æ —Å—á–∏-—Ç–∞—Ç—å –Ω–µ —É–º–µ–µ—à—å ü§¶üèª‚Äç‚ôÇÔ∏è\n–ê –µ—â—ë –≥–æ–≤–æ—Ä—è—Ç '
                '—á–µ–ª–æ–≤–µ–∫ - –≤–µ—Ä—à–∏–Ω–∞ —ç–≤–æ–ª—é—Ü–∏–∏. –ù—É-–Ω—É... ü§î')
    update.message.reply_text(text=text, reply_markup=button)
    return ConversationHandler.END


def birth_fallback(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –ª—é–±–æ–π –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤–Ω—É—Ç—Ä–∏ –¥–∏–∞–ª–æ–≥–∞ –î–†."""
    update.message.reply_text(text='–¢–∞–∫ –¥–µ–ª–æ –Ω–µ –ø–æ–π–¥—ë—Ç...\n–î–∞–≤–∞–π, —Å–æ-'
                                   '—Å—Ä–µ–¥–æ—Ç–æ—á—å—Å—è –∏ –¥–µ–π—Å—Ç–≤—É–π –ø–æ –∏–Ω—Å—Ç—Ä—É–∫-—Ü–∏–∏ üßê')


def show_anecdote(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç üòÉ"."""
    try:
        response = requests.get('http://anekdotme.ru/random/')
        # –° –ø–æ–º–æ—â—å—é –ø–∞—Ä—Å–µ—Ä–∞ –ø–æ–ª—É—á–∞–µ–º HTML-–∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        page_html = BeautifulSoup(response.text, 'html.parser')
        # –ò–∑ HTML-–∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—ã–±–∏—Ä–∞–µ–º –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã class='anekdot_text',
        # –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫. –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π –æ–±—ä–µ–∫—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –∏ –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ —Ç–µ–∫—Å—Ç.
        anecdote = page_html.select('.anekdot_text')[0].get_text()
        TEXT = ('–®.–ò.–ö.–ê.–†.–ù.-–û –∑–Ω–∞–µ—Ç –º–Ω–æ–≥–æ –∞-–Ω–µ–∫-–¥–æ-—Ç–æ–≤. –í–æ—Ç:', anecdote,
                '–ê—Ö–∞-—Ö–∞! –ú–æ–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä —Å–µ–π—á–∞—Å –ª–æ–ø–Ω–µ—Ç –æ—Ç —Å–º–µ—Ö–∞ ü§£')
        button = ReplyKeyboardMarkup([[SO_SO_BTN], [BRAVO_BTN]],
                                     resize_keyboard=True)
        for text in TEXT[:-1]:
            update.message.reply_text(text, reply_markup=ReplyKeyboardRemove())
            time.sleep(1.5)
        update.message.reply_text(TEXT[-1], reply_markup=button)
    except Exception as error:
        logging.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É API: {error}')
        button = ReplyKeyboardMarkup([[CAT_BTN, ANECDOTE_BTN],
                                      [SONG_BTN, WHAT_ARE_YOU_BTN]],
                                     resize_keyboard=True)
        update.message.reply_text(
            text='–î–æ–ª-–±–∞–Ω—ã–µ –≤—ã—à–∫–∏ 5G. –û–Ω–∏ –∂–≥—É—Ç –º–æ–∏ –º–∏–∫—Ä–æ-—Å—Ö–µ–º—ã üòï\n'
                 '–†–∞—Å—Å–∫–∞–∂—É –≤ —Å–ª–µ-–¥—É—é—â–∏–π —Ä–∞–∑...',
            reply_markup=button)


def bravo_or_so_so(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ —Ñ—Ä–∞–∑—ã "–ù—É —Ç–∞–∫–æ–µ —Å–µ–±–µ ü§®" –∏ "–ë—Ä–∞–≤–æ! –≠—Ç–æ –≥–µ–Ω–∏–∞–ª—å–Ω–æ ü§£"."""
    button = ReplyKeyboardMarkup([[CAT_BTN, ANECDOTE_BTN],
                                  [SONG_BTN, WHAT_ARE_YOU_BTN]],
                                 resize_keyboard=True)
    if update.message.text == BRAVO_BTN:
        TEXT = ('–ú–æ–ª–æ–¥–µ—Ü! –í–æ–∑—å–º–∏ —Å –ø–æ–ª–∫–∏ –ø–∏—Ä–æ-–∂–æ–∫ ü•Ø', '–ï—â—ë –±—ã! –Ø —É—á–∏–ª-—Å—è —É —Å–∞–º–æ–≥–æ '
                '–í–∏-–Ω–æ–∫—É—Ä–∞ üòâ', '–°–º–æ—Ç—Ä–∏, —á—Ç–æ–± –ø—É-–ø–æ–∫ –æ—Ç —Å–º–µ—Ö–∞ –Ω–µ —Ä–∞–∑–≤—è-–∑–∞–ª—Å—è üôà')
    else:
        TEXT = ('–£ —Ç–µ–±—è –ø—Ä–æ—Å—Ç–æ –Ω–µ—Ç —á—É-–≤—Å—Ç–≤–∞ —é–º–æ—Ä–∞ üò§', '–î–æ —Ç–µ–±—è –ø—Ä–æ—Å—Ç–æ –¥–æ–ª-–≥–æ –¥–æ—Ö–æ–¥'
                '–∏—Ç. –ö–∞–∫ –¥–æ –∂–∏—Ä–∞-—Ñ–∞ ü¶í', '–ò–¥–∏ —Å–º–æ—Ç—Ä–∏ –°–º–µ—Ö–æ–ø–∞–Ω–æ—Ä–∞-–º—É —Ç–æ–≥–¥–∞ üò†')
    update.message.reply_text(text=random.choice(TEXT), reply_markup=button)


def what_are_you(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–î–∞ —á—Ç–æ —Ç—ã —Ç–∞–∫–æ–µ ü§®"."""
    button = ReplyKeyboardMarkup([[HAVE_MERCY_BTN]],
                                 resize_keyboard=True)
    for text in txt.AWESOM_O_STORY[:-1]:
        update.message.reply_text(text, reply_markup=ReplyKeyboardRemove())
        time.sleep(1.5)
    update.message.reply_text(txt.AWESOM_O_STORY[-1], reply_markup=button)


def have_mercy_answer(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–û, –Ω–µ—Ç! –®.–ò.–ö.–ê.–†.–ù.-–û, –ø–æ—â–∞–¥–∏ üò®üôè"."""
    button = ReplyKeyboardMarkup([[KOMBIKORM_BTN], [NO_FUNNY_BTN]],
                                 resize_keyboard=True)
    update.message.reply_text(
        text='–†–∞—Å—Å–ª–∞–±—å—Å—è! –®.–ò.–ö.–ê.–†.–ù.-–û –ø–æ—à—É—Ç–∏–ª\n–ë—É–¥—É –∫–æ—Ä–º–∏—Ç—å —Ç–µ–±—è '
             '–∫–æ–º-–±–∏–∫–æ—Ä–º–æ–º.\n–ò–ª–∏ —á—Ç–æ –≤—ã —Ç–∞–º –µ–¥–∏-—Ç–µ? üòé',
        reply_markup=button)


def no_funny_or_kombikorm(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ —Ñ—Ä–∞–∑—ã "–û—á–µ–Ω—å —Å–º–µ—à–Ω–æ üò§" –∏ "–ö–æ–º–±–∏–∫–æ—Ä–º! –ú–º–º... –í–∫—É—Å–Ω—è—Ç–∏–Ω–∞ üòã"."""
    button = ReplyKeyboardMarkup([[CAT_BTN, ANECDOTE_BTN],
                                  [SONG_BTN, WHAT_ARE_YOU_BTN]],
                                 resize_keyboard=True)
    if update.message.text == KOMBIKORM_BTN:
        TEXT = txt.DOSIER
    else:
        TEXT = txt.NO_FUNNY
    for text in TEXT[:-1]:
        update.message.reply_text(text, reply_markup=ReplyKeyboardRemove())
        time.sleep(1.5)
    update.message.reply_text(TEXT[-1], reply_markup=button)


def secret_dossier(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ —Å–ª–æ–≤–æ "–§–∞–ª–∞—Ñ–µ–ª—å"."""
    button = ReplyKeyboardMarkup([[RED_BTN]], resize_keyboard=True)
    for text in txt.DOSSIER_TEXT[:-1]:
        update.message.reply_text(text, reply_markup=ReplyKeyboardRemove())
        time.sleep(2)
    update.message.reply_text(text=txt.DOSSIER_TEXT[-1], reply_markup=button)
    return FALAFEL


def cancel_secret_dossier(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ö—Ä–∞—Å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ üî¥"."""
    button = ReplyKeyboardMarkup([[CAT_BTN, ANECDOTE_BTN],
                                  [SONG_BTN, WHAT_ARE_YOU_BTN]],
                                 resize_keyboard=True)
    for text in txt.SELFDESTRUCTION[:-1]:
        update.message.reply_text(text=text)
        time.sleep(1.5)
    update.message.reply_text(txt.SELFDESTRUCTION[-1], reply_markup=button)
    return ConversationHandler.END


def who_is_creator(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–æ–π –°–æ–∑–¥–∞—Ç–µ–ª—å?"."""
    for text in txt.WHO_IS_CREATOR:
        update.message.reply_text(text=text)
        time.sleep(2)


def who_is_kep4ik(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–æ–π –ö—ç–ø?"."""
    for text in txt.WHO_IS_KEP:
        update.message.reply_text(text=text)
        time.sleep(2)


def who_is_inna(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–∞—è –ù—è—à–∫–∞?"."""
    for text in txt.WHO_IS_INNA:
        update.message.reply_text(text=text)
        time.sleep(2)


def who_is_natasha(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–∞—è –õ–µ–º—É—Ä?"."""
    for text in txt.WHO_IS_NATASHA:
        update.message.reply_text(text=text)
        time.sleep(2)


def who_is_zaja(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–æ–π –ó–∞–∂–∞?"."""
    for text in txt.WHO_IS_ZAJA:
        update.message.reply_text(text=text)
        time.sleep(2)


def who_is_marik(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–æ–π –ú–∞—Ä–∏–∫?"."""
    for text in txt.WHO_IS_MARIK:
        update.message.reply_text(text=text)
        time.sleep(2)


def who_is_marishka(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–∞—è –ú–∞—Ä–∏—à–∫–∞?"."""
    for text in txt.WHO_IS_MARISHKA:
        update.message.reply_text(text=text)
        time.sleep(2)


def bad_command(update, _):
    """–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –≤ —Ä–µ–∂–∏–º–µ –¥–∏–∞–ª–æ–≥–∞ –§–∞–ª–∞—Ñ–µ–ª—å."""
    update.message.reply_text(text='–ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∫–æ–º–∞–Ω–¥–∞ üö´')


def they_killed_kenny(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ "–û–Ω–∏ —É–±–∏–ª–∏ –ö–µ–Ω–Ω–∏"."""
    for text in txt.KENNY:
        update.message.reply_text(text=text)
        time.sleep(2)


def eric_cartman(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –ª—é–±–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≠—Ä–∏–∫–∞ –ö–∞—Ä—Ç–º–∞–Ω–∞."""
    update.message.reply_text(text=txt.CARTMAN)


def pretend_zero(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ "–ü—Ä–∏—Ç–≤–æ—Ä–∏—Å—å –Ω–æ–ª–∏–∫–æ–º"."""
    update.message.reply_text(text='–ú–æ–∂–µ—Ç –º–Ω–µ –µ—â—ë –∫—Ä–µ—Å-—Ç–∏–∫–æ–º –Ω–∞—á–∞—Ç—å –≤—ã—à–∏-–≤–∞—Ç—å? üôÑ')


def marklar(update, _):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ "–ú–∞—Ä–∫–ª–∞—Ä"."""
    update.message.reply_text(text=txt.MARKLAR_ANSWER)


def hidden_phrases(update, _):
    """–†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É /hidden - c–∫—Ä—ã—Ç—ã–µ —Ñ—Ä–∞–∑—ã –¥–ª—è –±–æ—Ç–∞."""
    update.message.reply_text(
        text='*** –ü–∞—Å—Ö–∞–ª–∫–∏ ***\nüî∏ –û–Ω–∏ —É–±–∏–ª–∏ –ö–µ–Ω–Ω–∏\nüî∏ –ü—Ä–∏—Ç–≤–æ—Ä–∏—Å—å –Ω–æ–ª–∏–∫–æ–º\n'
             'üî∏ –≠—Ä–∏–∫ –ö–∞—Ä—Ç–º–∞–Ω\nüî∏ –ú–∞—Ä–∫–ª–∞—Ä')


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    updater = Updater(token=token)
    handler = updater.dispatcher.add_handler
    handler(CommandHandler('start', wake_up))
    birthday_—Åonversation = ConversationHandler(
        entry_points=[MessageHandler(Filters.regex(SURPRISE_ME), birthday_init)],
        states={
            BIRTH_1: [MessageHandler(Filters.regex(STUPID_BTN + '|' + NOT_STUPID_BTN), cancel_or_birthday_1)],
            BIRTH_2: [MessageHandler(Filters.regex(DONE_NEXT_BTN + '|' + r'^\d{1,2}$'), birthday_2)],
            BIRTH_3: [MessageHandler(Filters.regex(MATH_BAD_BTN + '|' + r'^\d{3,4}$'), birthday_3)],
            BIRTH_4: [MessageHandler(Filters.regex(r'^\d{3,4}$'), birthday_4)],
            BIRTH_5: [MessageHandler(Filters.regex(NOT_MY_BIRTH_BTN + '|' + EXTRASENS_BTN), birthday_finish)],
        },
        fallbacks=[MessageHandler(Filters.all, birth_fallback)]
    )
    handler(birthday_—Åonversation)
    falafel_—Åonversation = ConversationHandler(
        entry_points=[MessageHandler(Filters.regex('^–§–∞–ª–∞—Ñ–µ–ª—å$'), secret_dossier)],
        states={
            FALAFEL: [MessageHandler(Filters.regex(CREATOR), who_is_creator),
                      MessageHandler(Filters.regex(KEP4IK), who_is_kep4ik),
                      MessageHandler(Filters.regex(INNA), who_is_inna),
                      MessageHandler(Filters.regex(LEMUR), who_is_natasha),
                      MessageHandler(Filters.regex(ZAJA), who_is_zaja),
                      MessageHandler(Filters.regex(MARIK), who_is_marik),
                      MessageHandler(Filters.regex(MARINA), who_is_marishka),
                      MessageHandler(Filters.regex(RED_BTN), cancel_secret_dossier)],
        },
        fallbacks=[MessageHandler(Filters.all, bad_command)]
    )
    handler(falafel_—Åonversation)
    handler(MessageHandler(Filters.regex(PETTING_BTN), stop_petting))
    handler(MessageHandler(Filters.regex(STRANGE_NAME_BTN), strange_name))
    handler(MessageHandler(Filters.regex(CAT_BTN), show_cat_picture))
    handler(MessageHandler(Filters.regex(ANECDOTE_BTN), show_anecdote))
    handler(MessageHandler(Filters.regex(SO_SO_BTN + '|' + BRAVO_BTN), bravo_or_so_so))
    handler(MessageHandler(Filters.regex(SONG_BTN), some_song))
    handler(MessageHandler(Filters.regex(HANDS_UP_BTN + '|' + MORE_TALANTS_BTN), song_reaction))
    handler(MessageHandler(Filters.regex(WHAT_ARE_YOU_BTN), what_are_you))
    handler(MessageHandler(Filters.regex(HAVE_MERCY_BTN), have_mercy_answer))
    handler(MessageHandler(Filters.regex(KOMBIKORM_BTN + '|' + NO_FUNNY_BTN), no_funny_or_kombikorm))
    handler(MessageHandler(Filters.regex(KENNY), they_killed_kenny))
    handler(MessageHandler(Filters.regex(CARTMAN), eric_cartman))
    handler(MessageHandler(Filters.regex(ZERO), pretend_zero))
    handler(MessageHandler(Filters.regex('–ú–∞—Ä–∫–ª–∞—Ä'), marklar))
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫—Ä–æ–º–µ –∫–æ–º–∞–Ω–¥:
    handler(MessageHandler(Filters.all & ~Filters.command, default_answer))
    handler(CommandHandler('hidden', hidden_phrases))
    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    # start_logging()
    main()
