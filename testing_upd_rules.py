import os
import random
import time

from dotenv import load_dotenv
from telegram import Bot, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ConversationHandler, Filters, MessageHandler, Updater

load_dotenv()
token = os.getenv('AWESOM_O_TOKEN')
bot = Bot(token=token)


CATS_TRAIN = '–ü–æ–π–¥—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è. –ù–∞ –∫–æ—à–∫–∞—Ö üêà'
EAT_CORN = '–ü–æ–π–¥—É –≥—Ä—ã–∑—Ç—å —Å–≤–æ—é –∫—É–∫—É—Ä—É–∑–∫—É üòã'
ENOUGH = '–¢–æ—á–Ω–æ! –•–≤–∞—Ç–∏—Ç üñê'
GO = '–ü–æ–µ—Ö–∞–ª–∏ üëå'
NO_MORE_GAME = '–ë–æ–ª—å—à–µ –Ω–µ —Ö–æ—á—É –∏–≥—Ä–∞—Ç—å üòê'
REVENGE = '–•–æ—á—É —Ä–µ–≤–∞–Ω—à ü•ä'
WIN_BACK = '–î–∞–º —Ç–µ–±–µ –æ—Ç—ã–≥—Ä–∞—Ç—å—Å—è üòô'
YOUR_TURN = '–¢–≤–æ–π —Ö–æ–¥ üëÜ'

BET_RANGE = r'^([3-9]|[1][0-1]) ([3-9]|[1][0-1])$'
BOT_DICE, USER_BET, USER_DICE = 1, 2, 3
BOT_WINS = 0
USER_DICE_COUNTER = 0
USER_DICE_RESULT = 0
USER_WINS = 0


def games_stat():
    """–ê–Ω–∞–ª–∏–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑ GAME_STAT –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ –∫–æ–Ω—Ü–µ —Ä–∞—É–Ω–¥–∞."""
    bot_win = GAME_STAT['BOT']['wins']
    bot_made_bet = GAME_STAT['BOT']['made_bet']
    bot_guessed_bet = GAME_STAT['BOT']['guessed_bet']
    bot_double_six = GAME_STAT['BOT']['double_six']
    bot_double_one = GAME_STAT['BOT']['double_one']
    player_win = GAME_STAT[f'{PLAYER}']['wins']
    player_made_bet = GAME_STAT[f'{PLAYER}']['made_bet']
    player_guessed_bet = GAME_STAT[f'{PLAYER}']['guessed_bet']
    player_double_six = GAME_STAT[f'{PLAYER}']['double_six']
    player_double_one = GAME_STAT[f'{PLAYER}']['double_one']
    total_games = bot_win + player_win
    return (
        f'–®.–ò.–ö.–ê.–†.–ù.-–û  üÜö  {PLAYER}\n ‚ÑπÔ∏è c—ã–≥—Ä–∞–Ω–æ —Ä–∞—É–Ω–¥–æ–≤:  {total_games}\n\n'
        f'‚úÖ –®.–ò.–ö.–ê.–†.–ù.-–û \n'
        f'–ø–æ–±–µ–¥—ã:  {bot_win}' + f'  =>  {bot_win / total_games * 100:.1f}%' if bot_win else '' + f'\n–ø—Ä–æ–∏–≥—Ä—ã—à–∏:  {player_win}\n'
        f'—Å—Ç–∞–≤–æ–∫:  {bot_made_bet}  —É—Å–ø–µ—à–Ω—ã—Ö:  {bot_guessed_bet}' + f'  =>  {bot_guessed_bet / bot_made_bet * 100:.1f}%' if bot_guessed_bet else '' + '\n'
        f'–í —Å—Ä–µ–¥–Ω–µ–º –±—Ä–æ—Å–∫–æ–≤ –¥–ª—è –ø–æ–±–µ–¥—ã  {bot_made_bet / bot_win:.1f}\n' if bot_win else ''
        f'6Ô∏è‚É£6Ô∏è‚É£ –≤—ã–ø–∞–¥–∞–ª–∏:  {bot_double_six}' + f'  =>  {bot_double_six / bot_made_bet * 100:.1f}%' if bot_double_six else '' + '\n'
        f'1Ô∏è‚É£1Ô∏è‚É£ –≤—ã–ø–∞–¥–∞–ª–∏:  {bot_double_one}' + f'  =>  {bot_double_one / bot_made_bet * 100:.1f}%' if bot_double_one else '' + '\n\n'
        f'‚úÖ {PLAYER}\n'
        f'–ø–æ–±–µ–¥—ã:  {player_win}' + f'  =>  {player_win / total_games * 100:.1f}%' if player_win else '' + f'\n–ø—Ä–æ–∏–≥—Ä—ã—à–∏:  {bot_win}\n'
        f'—Å—Ç–∞–≤–æ–∫:  {player_made_bet}  —É—Å–ø–µ—à–Ω—ã—Ö:  {player_guessed_bet}' + f'  =>  {player_guessed_bet / player_made_bet * 100:.1f}%' if player_guessed_bet else '' + '\n'
        f'–í —Å—Ä–µ–¥–Ω–µ–º –±—Ä–æ—Å–∫–æ–≤ –¥–ª—è –ø–æ–±–µ–¥—ã  ' + f'{player_made_bet / player_win:.1f}' if player_win else '--' + '\n'
        f'6Ô∏è‚É£6Ô∏è‚É£ –≤—ã–ø–∞–¥–∞–ª–∏:  {player_double_six}' + f'  =>  {player_double_six / player_made_bet * 100:.1f}%' if bot_double_six else '' + '\n'
        f'1Ô∏è‚É£1Ô∏è‚É£ –≤—ã–ø–∞–¥–∞–ª–∏:  {player_double_one}' + f'  =>  {player_double_one / player_made_bet * 100:.1f}%' if bot_double_one else ''
    )


def game_rules(update, _):
    """–û—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É "–°—Ç–∞—Ä—Ç"."""
    global GAME_STAT, PLAYER
    GAME_STAT = {'BOT': dict(wins=0, double_six=0, double_one=0, made_bet=0, guessed_bet=0)}
    PLAYER = update.message.chat.full_name
    GAME_STAT[f'{PLAYER}'] = dict(wins=0, double_six=0, double_one=0, made_bet=0, guessed_bet=0)
    button = ReplyKeyboardMarkup([[GO]], resize_keyboard=True)
    RULES_DICE = (
        '–†–∞—Å—Å–∫–∞–∑—ã–≤–∞—é –ø—Ä–∞-–≤–∏–ª–∞ –∏–≥—Ä—ã ü§ì\n–ò–≥—Ä–æ–∫–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –±—Ä–æ-—Å–∞—é—Ç –¥–≤–µ –∏–≥—Ä–∞–ª—å–Ω—ã–µ –∫–æ—Å—Ç–∏ üé≤\n–ü–µ—Ä–µ–¥ –±—Ä–æ—Å–∫–∞–º–∏ –Ω–µ–æ–±—Ö–æ–¥–∏-–º–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å —Å–≤–æ–π '
        '—Ä–µ-–∑—É–ª—å—Ç–∞—Ç, –Ω–∞–∑–≤–∞–≤ –¥–≤–∞ —á–∏—Å–ª–∞.\n–ï—Å–ª–∏ —Å—É–º-–º–∞ –≤—ã–ø–∞–≤—à–∏—Ö –æ—á–∫–æ–≤ üëì —Å–æ-–≤–ø–∞–¥—ë—Ç —Å –æ–¥–Ω–∏–º –∏–∑ —ç—Ç–∏—Ö —á–∏—Å–µ–ª - –∏–≥—Ä–æ–∫ –∑–∞—Ä–∞-–±–∞—Ç—ã–≤–∞–µ—Ç –æ–¥–∏–Ω –±–∞–ª–ª.\n',
        '–ï—Å–ª–∏ –Ω–∞ –∫—É-–±–∏–∫–∞—Ö –≤—ã–ø–∞–¥—É—Ç 1Ô∏è‚É£1Ô∏è‚É£ - —Å –∏–≥—Ä–æ–∫–∞ —Å–Ω–∏–º–∞–µ—Ç-—Å—è –æ–¥–∏–Ω –±–∞–ª–ª (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å). –ü–µ-—á–∞–ª—å–∫–∞ üò©\n–ó–∞—Ç–æ, –µ—Å–ª–∏ –≤—ã–ø–∞–¥—É—Ç 6Ô∏è‚É£6Ô∏è‚É£ - '
        '–∏–≥—Ä–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏-—á–µ—Å–∫–∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–¥–∏–Ω –±–∞–ª–ª! –î–∂–µ–∫ –ø–æ—Ç ü•≥\n–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, —á–∏—Å–ª–∞ 2 –∏ 12 –∑–∞–≥–∞–¥—ã–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ ‚ö†Ô∏è '
        '–î–∏–∞–ø–æ–∑–æ–Ω –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫: –æ—Ç 3 –¥–æ 11 ‚ÄºÔ∏è\n–ü–æ–±–µ–∂–¥–∞-–µ—Ç —Ç–æ—Ç, –∫—Ç–æ –ø–µ—Ä–≤—ã–º –Ω–∞–±–µ—Ä—ë—Ç 3Ô∏è‚É£ –±–∞–ª–ª–∞ üèÜüíêüéä',
        '–ü–æ–±–µ–¥–∏-—Ç–µ–ª—é —Ç–æ—Ä–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ –≤—Ä—É—á–∞—Ç –∫–æ—á–∞–Ω –∫—É-–∫—É—Ä—É–∑—ã üåΩ –∏ –ø–æ—Ö–ª–æ–ø–∞—é—Ç –ø–æ –ø–ª–µ—á—É üëè\n–ü—Ä–æ–∏–≥—Ä–∞–≤—à–µ–≥–æ –∂–¥—ë—Ç –Ω–µ–æ–¥–æ–±—Ä–∏-—Ç–µ–ª—å–Ω–æ–µ –æ—Å–≤–∏—Å—Ç—ã–≤–∞–Ω–∏–µ –∏ '
        '20 —á–∞—Å–æ–≤ –∏—Å–ø—Ä–∞–≤–∏-—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞–±–æ—Ç üß§ü™ö‚öí\n–ù–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ ü§î', '–Ø –ø–æ—Ö–æ-–∂—É –ø–µ—Ä–≤—ã–º –∏ –ø–æ–∫–∞–∂—É, –∫–∞–∫ —ç—Ç–æ —Ä–∞-–±–æ—Ç–∞–µ—Ç ‚òùÔ∏è'
    )
    for text in RULES_DICE:
        update.message.reply_text(text, reply_markup=button if text == RULES_DICE[-1] else None)
    return BOT_DICE


def bot_bet_roll_dice(update, _):
    """–û—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–∏ "–ü–æ–µ—Ö–∞–ª–∏ üëå", "–¢–≤–æ–π —Ö–æ–¥ üëÜ", "–•–æ—á—É —Ä–µ–≤–∞–Ω—à ü•ä" –∏ "–î–∞–º —Ç–µ–±–µ –æ—Ç—ã–≥—Ä–∞—Ç—å—Å—è üòô"."""
    cancel = ReplyKeyboardMarkup([[NO_MORE_GAME]], resize_keyboard=True)
    choise = ReplyKeyboardMarkup([[REVENGE], [CATS_TRAIN]], resize_keyboard=True)
    global BOT_WINS, USER_WINS
    bet_1, bet_2 = random.randint(3, 11), random.randint(3, 11)
    while bet_2 == bet_1:
        bet_2 = random.randint(3, 11)
    update.message.reply_text(f'–Ø –ø–æ—Å—Ç–∞–≤–ª—é –Ω–∞ {bet_1} –∏ {bet_2} ‚úçÔ∏è', reply_markup=ReplyKeyboardRemove())
    GAME_STAT['BOT']['made_bet'] += 1
    update.message.reply_text('–ë—Ä–æ—Å–∞—é –∫–æ-—Å—Ç–∏... ‚úä')
    result = 0
    for _ in (1, 2):
        value = update.message.reply_dice()['dice']['value']
        result += value
    update.message.reply_text(f'–ú–æ–π —Ä–µ-–∑—É–ª—å—Ç–∞—Ç:  {result} ‚ùóÔ∏è', reply_markup=cancel)
    if result in (bet_1, bet_2, 2, 12):
        if result == 2:
            update.message.reply_text('–û, –Ω–µ—Ç! üò± –î–≤–µ –µ–¥–∏-–Ω–∏—á–∫–∏. –ú–∏–Ω—É—Å –±–∞–ª–ª üò≠')
            GAME_STAT['BOT']['double_one'] += 1
            if BOT_WINS > 0: BOT_WINS -= 1
        elif result == 12:
            update.message.reply_text('–Ø —Å–æ-—Ä–≤–∞–ª –î–∂–µ–∫ –ø–æ—Ç ü•≥ –î–≤–µ —à–µ—Å—Ç—ë—Ä–∫–∏! –ü–æ–ª—É—á–∞—é –±–∞–ª–ª üëè')
            GAME_STAT['BOT']['double_six'] += 1
            BOT_WINS += 1
        else:
            update.message.reply_text('–£—Ä–∞! –£–¥–∞—á–∞ –Ω–∞ –º–æ–µ–π —Å—Ç–æ-—Ä–æ–Ω–µ üòÑ\n–Ø –≤—ã-–∏–≥—Ä–∞–ª –≤ —ç—Ç–æ–º —Ä–∞—É–Ω–¥–µ ü¶æ')
            GAME_STAT['BOT']['guessed_bet'] += 1
            BOT_WINS += 1
        if BOT_WINS == USER_WINS:
            update.message.reply_text(f'–°—á—ë—Ç {BOT_WINS} : {USER_WINS}\–£ –Ω–∞—Å –Ω–∏—á—å—è üçª')
        else:
            update.message.reply_text(f'–°—á—ë—Ç {BOT_WINS} : {USER_WINS}\n' + ('–Ø –≤–ø–µ—Ä–µ–¥–∏ ü§ò' if BOT_WINS > USER_WINS else '–í —Ç–≤–æ—é –ø–æ–ª—å–∑—É üòï'))
        if BOT_WINS == 3:
            update.message.reply_text(
                f'–§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ-–∑—É–ª—å—Ç–∞—Ç: üí´ {BOT_WINS} : {USER_WINS} üí´' + '  –í—Å—É—Ö—É—é üôà' if abs(BOT_WINS - USER_WINS) == 3 else '' + '\n\n'
                '–ï—Ö—É—É—É ü•≥ –ü–æ–±–µ–¥–∞ –∑–∞ –º–Ω–æ–π!\n–£—á–∏—Å—å —É –º–∞—Å—Ç–µ—Ä–∞, —Å–∞–ª–∞–≥–∞ üòé',
                reply_markup=choise
            )
            GAME_STAT['BOT']['wins'] += 1
            update.message.reply_text(games_stat())
            BOT_WINS = 0
            USER_WINS = 0
            return BOT_DICE
    else:
        update.message.reply_text('–ù–µ —É–≥–∞–¥–∞–ª üòî\n–õ–∞–¥–Ω–æ, –≤ —Å–ª–µ–¥—É—é-—â–∏–π —Ä–∞–∑ –ø–æ–≤–µ–∑—ë—Ç...')
    update.message.reply_text('–¢–≤–æ—è –æ—á–µ-—Ä–µ–¥—å. –î–µ–ª–∞–π —Å—Ç–∞–≤–∫—É ‚òùÔ∏è –∏ –±—Ä–æ—Å–∞–π –∫–æ-—Å—Ç–∏.', reply_markup=cancel)
    return USER_BET


def user_bets(update, _):
    """–û—Ç–≤–µ—Ç –Ω–∞ –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–≤—É—Ö —á–∏—Å–µ–ª –ø–µ—Ä–µ–¥ –±—Ä–æ—Å–∫–∞–º–∏ –∫—É–±–∏–∫–æ–≤."""
    global USER_BET_1, USER_BET_2
    button = ReplyKeyboardMarkup([['üé≤']], resize_keyboard=True)
    USER_BET_1, USER_BET_2 = map(int, (update.message.text).split())
    if USER_BET_1 == USER_BET_2:
        update.message.reply_text('–ß–∏—Å–ª–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑-–Ω—ã–º–∏! –≠—Ç–æ –≤ —Ç–≤–æ–∏—Ö –∂–µ –∏–Ω-—Ç–µ—Ä–µ—Å–∞—Ö ü§¶üèª‚Äç‚ôÇÔ∏è')
    else:
        update.message.reply_text('–ü—Ä–∏–Ω—è—Ç–æ! –ë—Ä–æ—Å–∞–π –∫–æ-—Å—Ç–∏ üé≤', reply_markup=button)
        GAME_STAT[f'{PLAYER}']['made_bet'] += 1
        return USER_DICE


def user_roll_dice(update, _):
    """–ü–æ–¥—Å—á—ë—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –±—Ä–æ—Å–∫–æ–≤ –∫—É–±–∏–∫–∞ –∏–≥—Ä–æ–∫–æ–º."""
    your_turn = ReplyKeyboardMarkup([[YOUR_TURN]], resize_keyboard=True)
    choice = ReplyKeyboardMarkup([[WIN_BACK], [EAT_CORN]], resize_keyboard=True)
    global BOT_WINS, USER_DICE_COUNTER, USER_DICE_RESULT, USER_WINS
    points = update.message.dice['value']
    USER_DICE_COUNTER += 1
    USER_DICE_RESULT += points
    if USER_DICE_COUNTER != 2:
        update.message.reply_text('–ë—Ä–æ—Å–∞–π –µ—â—ë üëâ')
        return None
    update.message.reply_text(f'–¢–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:  {USER_DICE_RESULT} ‚ùóÔ∏è', reply_markup=your_turn)
    if USER_DICE_RESULT in (USER_BET_1, USER_BET_2, 2, 12):
        if USER_DICE_RESULT == 2:
            update.message.reply_text('–•–∞! –î–≤–µ –¥—ã—Ä–∫–∏ üôà –ù–µ –ø–æ–≤–µ–∑-–ª–æ. –ú–∏–Ω—É—Å –±–∞–ª–ª.')
            GAME_STAT[f'{PLAYER}']['double_one'] += 1
            if USER_WINS > 0: USER_WINS -= 1
        elif USER_DICE_RESULT == 12:
            update.message.reply_text('–ù–∏—á–µ–≥–æ —Å–µ–±–µ! –î–≤–µ —à–µ—Å—Ç—ë—Ä–∫–∏ üò≥ –ü–æ–ª—É—á–∞–µ—à—å –±–∞–ª–ª.')
            GAME_STAT[f'{PLAYER}']['double_six'] += 1
            USER_WINS += 1
        else:
            update.message.reply_text('–£–¥–∞—á–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ-—Ä–æ–Ω–µ.\n–¢—ã –ø–æ–±–µ–¥–∏–ª –≤ —ç—Ç–æ—Ç —Ä–∞–∑ üò†')
            GAME_STAT[f'{PLAYER}']['guessed_bet'] += 1
            USER_WINS += 1
        if USER_WINS == BOT_WINS:
            update.message.reply_text(f'–°—á—ë—Ç {BOT_WINS} : {USER_WINS}\n–£ –Ω–∞—Å –Ω–∏—á—å—è üçª')
        else:
            update.message.reply_text(f'–°—á—ë—Ç {BOT_WINS} : {USER_WINS}\n' + ('–Ø –≤–ø–µ—Ä–µ–¥–∏ üôÉ' if BOT_WINS > USER_WINS else '–í —Ç–≤–æ—é –ø–æ–ª—å–∑—É üòí'))
        if USER_WINS == 3:
            update.message.reply_text(
                f'–§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ-–∑—É–ª—å—Ç–∞—Ç: üí´ {USER_WINS} : {BOT_WINS} üí´\n\n–ü–æ-–∑–¥—Ä–∞–≤–ª—è—é, —Ç–≤–æ—è –ø–æ–±–µ–¥–∞! –ú–æ–∂–µ—à—å –ø–æ–ª–∞-–∫–æ–º–∏—Ç—å—Å—è –∫—É-–∫—É—Ä—É–∑–∫–æ–π üåΩüòè\n'
                '–ù–æ —Å–∏–ª—å–Ω–æ –Ω–µ –∑–∞-–∑–Ω–∞–≤–∞–π—Å—è - —Ç–µ–±–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–µ–∑-–ª–æ üòà –ü–æ–Ω–∏–º–∞–µ—à—å, –¥–∞?',
                reply_markup=choice
            )
            GAME_STAT[f'{PLAYER}']['wins'] += 1
            update.message.reply_text(games_stat())
            BOT_WINS = 0
            USER_WINS = 0
    else:
        update.message.reply_text('–ù–µ —É–≥–∞–¥–∞–ª ü§∑üèª‚Äç‚ôÇÔ∏è –ù–∏—á–µ–≥–æ, –±—ã–≤–∞–µ—Ç...\n–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤–µ-—Å–µ–ª–∏—Ç—å—Å—è üòâ', reply_markup=your_turn)
    USER_DICE_COUNTER, USER_DICE_RESULT = 0, 0
    return BOT_DICE


def cancel_game(update, _):
    """–û—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–∏ "–ë–æ–ª—å—à–µ –Ω–µ —Ö–æ—á—É –∏–≥—Ä–∞—Ç—å üòê", "–¢–æ—á–Ω–æ! –•–≤–∞—Ç–∏—Ç üñê",
    "–ü–æ–π–¥—É –≥—Ä—ã–∑—Ç—å —Å–≤–æ—é –∫—É–∫—É—Ä—É–∑–∫—É üòã" –∏ "–ü–æ–π–¥—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è. –ù–∞ –∫–æ—à–∫–∞—Ö üêà"."""
    global BOT_WINS, USER_BET_1, USER_BET_2, USER_DICE_COUNTER, USER_DICE_RESULT, USER_WINS
    confirm = ReplyKeyboardMarkup([[ENOUGH], ['–ù–µ—Ç, —è –ø–µ—Ä–µ–¥—É–º–∞–ª üôÉ']], resize_keyboard=True)
    if update.message.text == NO_MORE_GAME:
        update.message.reply_text('–¢–æ—á–Ω–æ –Ω–µ —Ö–æ—á–µ—à—å –ø—Ä–æ-–¥–æ–ª–∂–∞—Ç—å?\n–í–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å —Å–±—Ä–æ—Å–∏—Ç-—Å—è üßê', reply_markup=confirm)
    if update.message.text == CATS_TRAIN or update.message.text == EAT_CORN or update.message.text == ENOUGH:
        update.message.reply_text('–õ–∞–¥–Ω–æ. –ó–∞-—Ö–æ—á–µ—à—å –µ—â—ë —Å—ã–≥—Ä–∞—Ç—å - —Ç—ã –∑–Ω–∞–µ—à—å, –≥–¥–µ –º–µ–Ω—è –Ω–∞–π-—Ç–∏ üòº',
                                  reply_markup=ReplyKeyboardRemove())  # –∑–¥–µ—Å—å –Ω—É–∂–Ω–∞ –∫–Ω–æ–ø–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        BOT_WINS = 0
        USER_DICE_COUNTER = 0
        USER_DICE_RESULT = 0
        USER_WINS = 0
        return ConversationHandler.END


def place_bet(update, _):
    """–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–∞–ø–µ —Å—Ç–∞–≤–∫–∏ –∏–≥—Ä–æ–∫–∞."""
    update.message.reply_text('–¢–µ–±–µ –Ω—É–∂–Ω–æ —Å–¥–µ-–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É ü§®\n–í–≤–µ–¥–∏ –¥–≤–∞ —Ä–∞–∑–Ω—ã—Ö —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ-–±–µ–ª:\n–º–∏–Ω–∏–º—É–º 3Ô∏è‚É£, –º–∞–∫—Å–∏–º—É–º 1Ô∏è‚É£1Ô∏è‚É£.')


def go_on(update, _):
    """–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–∞–ø–µ –±—Ä–æ—Å–∫–æ–≤ –∫—É–±–∏–∫–∞ –∏–≥—Ä–æ–∫–æ–º."""
    update.message.reply_text('–¢–µ–±–µ –Ω—É-–∂–Ω–æ –¥–≤–∞ —Ä–∞–∑–∞ –±—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫. –°–æ—Å—Ä–µ-–¥–æ—Ç–æ—á—å—Å—è ü§®')


def dice_fallback(update, _):
    """–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –≤–Ω—É—Ç—Ä–∏ –¥–∏–∞–ª–æ–≥–∞ –∏–≥—Ä—ã –≤ –∫–æ—Å—Ç–∏."""
    update.message.reply_text('–£ –Ω–∞—Å –∏–≥—Ä–∞. –ù–µ –æ—Ç–≤–ª–µ-–∫–∞–π—Å—è ü§®')


def default_answer(update, _):
    update.message.reply_text('–§—Ä–∞–∑–∞ –í–ù–ï –¥–∏–∞–ª–æ–≥–∞!!!')


def main():
    updater = Updater(token=token)
    handler = updater.dispatcher.add_handler

    play_game = ConversationHandler(
        entry_points=[MessageHandler(Filters.regex('–°—Ç–∞—Ä—Ç'), game_rules)],
        states={
            BOT_DICE: [MessageHandler(Filters.regex(GO + '|' + YOUR_TURN + '|' + REVENGE + '|' + WIN_BACK), bot_bet_roll_dice),
                       MessageHandler(Filters.regex(CATS_TRAIN + '|' + EAT_CORN), cancel_game)],
            USER_BET: [MessageHandler(Filters.regex(BET_RANGE), user_bets),
                       MessageHandler(Filters.regex(NO_MORE_GAME + '|' + ENOUGH), cancel_game),
                       MessageHandler(Filters.all, place_bet)],
            USER_DICE: [MessageHandler(Filters.dice, user_roll_dice),
                        MessageHandler(Filters.all, go_on)],
        },
        fallbacks=[MessageHandler(Filters.all, dice_fallback)]
    )
    handler(play_game)

    handler(MessageHandler(Filters.text & ~Filters.command, default_answer))
    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()
