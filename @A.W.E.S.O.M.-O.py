"""–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç A.W.E.S.O.M.-0."""
import logging
import os
import random
import time

from bs4 import BeautifulSoup
from dotenv import load_dotenv
from telegram import Bot, ReplyKeyboardMarkup
from telegram.ext import CommandHandler, Filters, MessageHandler, Updater
import requests

from text_for_bot import (
    AWESOM_O_STORY, SONG_1, SONG_2, SONG_3, SONG_4, SONG_5, SONG_6, WHO_IS_KEP,
    WHO_IS_CREATOR, WHO_IS_INNA, WHO_IS_NATASHA, WHO_IS_ZAJA, WHO_IS_MARIK,
    WHO_IS_MARISHKA
)

load_dotenv()
token = os.getenv('AWESOM_O_TOKEN')
bot = Bot(token=token)

CAT_BUTTON = '–ö–æ—Ç–∏–∫–∞ —Ö–æ—á—É üêà'
ANECDOTE_BUTTON = '–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç üòÉ'
SONG_BUTTON = '–°–ø–æ–π –ø–µ—Å–µ–Ω–∫—É üé§'
WHAT_ARE_YOU_BUTTON = '–î–∞ —á—Ç–æ —Ç—ã —Ç–∞–∫–æ–µ? ü§®'


def wake_up(update, context):
    """–†–µ–∞–∫—Ü–∏—è –±–æ—Ç–∞ –Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é /start."""
    chat = update.effective_chat
    name = update.message.chat.first_name
    button = ReplyKeyboardMarkup(
        [['–î–∞–≤–∞–π –ø–æ–≥–ª–∞–∂y']],  # –∏–≥—Ä–µ–∫
        resize_keyboard=True
    )
    TEXT = (f'–ü—Ä–∏–≤–µ—Ç, {name}! –Ø —Ä–æ–±–æ—Ç –®.–ò.–ö.–ê.–†.–ù.-–û —á–µ—Ç—ã—Ä–µ —Ç—ã—Å—è—á–∏ ü§ñ',
            '–í—ã—Å–æ–∫–æ–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –Ω–∞–Ω–æ-–∫–∏–±–µ—Ä–Ω–µ—Ç–∏—á–µ—Å–∫–∏–π '
            '–±–∏–æ-—Ä–µ–∑–æ–Ω–∞–Ω—Å–Ω—ã–π –æ—Ä–≥–∞–Ω–∏–∑–º.',
            '–ú–æ–∂–µ—à—å –º–µ–Ω—è –ø–æ–≥–ª–∞–¥–∏—Ç—å üôÉ')
    for text in TEXT:
        context.bot.send_message(chat.id, text, reply_markup=button)
        time.sleep(2)


def default_answer(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –ª—é–±–æ–π –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç."""
    chat = update.effective_chat
    ANSWERS = ('–ß—ë –¥—É—à–∏—à—å –º–µ–Ω—è? üò†',
               '–®.–ò.–ö.–ê.–†.–ù.-–û –Ω–µ –ø–æ–Ω–∏–º–∞—Ç—å —Ç–≤–æ–π –¥–∏–∞–ª–µ–∫—Ç ü§∑üèª‚Äç‚ôÄÔ∏è',
               '–û—Ç–∫–∞–∑–∞–Ω–æ! –õ—É—á—à–µ –ø–æ—á–∏—Å—Ç–∏ –º–æ–∏ —Ç—Ä–∞–Ω-–∑–∏—Å-—Ç–æ—Ä—ã.',
               '–ù—É —è—Å–Ω–æ! –ß—Ç–æ –µ—â—ë —Å–∫–∞–∂–µ—à—å? ü§®')
    context.bot.send_message(chat.id, random.choice(ANSWERS))


def get_new_image(update, context):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∫–æ—Ç–∏–∫–∞ –∏–ª–∏ –ø—ë—Å–∏–∫–∞."""
    CATS_URL = 'https://api.thecatapi.com/v1/images/search'
    DOGS_URL = 'https://api.thedogapi.com/v1/images/search'
    chat = update.effective_chat
    try:
        response = requests.get(CATS_URL).json()
    except Exception as error:
        logging.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É API: {error}')
        response = requests.get(DOGS_URL).json()
        context.bot.send_message(
            chat_id=chat.id,
            text='–£–ø—Å! –ö–æ—Ç–∏–∫–æ–≤ –Ω–µ –ø–æ–¥–≤–µ–∑–ª–∏. –í–æ—Ç —Ç–µ–±–µ –ø—ë—Å–∏–∫.'
        )
        time.sleep(2)
    random_cat = response[0].get('url')
    return random_cat


def show_cat_picture(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ö–æ—Ç–∏–∫–∞ —Ö–æ—á—É"."""
    chat = update.effective_chat
    TEXT_1 = ('–£ –®.–ò.–ö.–ê.–†.–ù.-–û –µ—Å—Ç—å —Å–≤–æ–π –∫–æ—Ç–æ-–±–æ—Ç –ê–π-–ú—É—Ä–∑–∏–∫. –û–Ω —É–º–µ–µ—Ç –ª–æ–≤–∏—Ç—å '
              '–∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –≤–∏-—Ä—É—Å—ã –∑–∞ —Ö–≤–æ—Å—Ç –∏ –≥–æ–≤–æ—Ä–∏—Ç—å "–º—è—É" –¥–≤–æ–∏—á–Ω—ã–º –∫–æ–¥–æ–º.')
    TEXT_2 = ('–í –î—Ä–µ-–≤–Ω–µ–º –ï–≥–∏–ø—Ç–µ –ª—é–±–∏–º–∞—è –∫–æ—à–∫–∞ —Å—á–∏—Ç–∞-–ª–∞—Å—å –¥—Ä—É–≥–æ–º –∏ —á–ª–µ–Ω–æ–º '
              '—Å–µ–º—å–∏.\n–ö–æ–≥–¥–∞ –∫–æ—à–∫–∞ —É–º–∏—Ä–∞-–ª–∞, —Å–µ–º—å—è –ø–æ–≥—Ä—É–∂–∞–ª–∞—Å—å –≤ –≥–ª—É-–±–æ–∫–∏–π '
              '—Ç—Ä–∞—É—Ä, –ø—Ä–æ–≤–æ–¥–∏–ª–∏—Å—å –ø–æ–≥—Ä–µ–±–∞-–ª—å–Ω—ã–µ —Ä–∏—Ç—É–∞–ª—ã, –∞ –º—É–∂—á–∏–Ω—ã –±—Ä–∏-–ª–∏ '
              '–±—Ä–æ–≤–∏, –≤—ã—Ä–∞–∂–∞—è —Å–≤–æ—é —Å–∫–æ—Ä–±—å.\n–¢–∞–∫–∂–µ –∏–∑ –∫–æ—Ç–∏–∫–æ–≤ –¥–µ–ª–∞–ª–∏ –º—É–º–∏–∏ üôÄ')
    TEXT_3 = ('–í –º–∏—Ä–µ –Ω–∞—Å—á–∏-—Ç—ã–≤–∞–µ—Ç—Å—è –æ–∫–æ–ª–æ 600 –º–ª–Ω –¥–æ–º–∞—à–Ω–∏—Ö –∫–æ-—à–µ–∫ –∏ –ø—Ä–∏–º–µ—Ä–Ω–æ '
              '200 –≤–∏–¥–æ–≤ –ø–æ—Ä–æ–¥ üêà')
    TEXT_4 = ('–†–æ—Å—Å–∏—è –∑–∞-–Ω–∏–º–∞–µ—Ç –ø–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ –≤ –ï–≤—Ä–æ-–ø–µ –ø–æ –∫–æ–ª–∏-—á–µ—Å—Ç–≤—É —Å–µ–º–µ–π, '
              '–≥–¥–µ –∂–∏–≤—É—Ç –∫–æ—Ç–∏–∫–∏.\n–£ 54% —Å–µ–º–µ–π –µ—Å—Ç—å –∫–∞–∫ –º–∏-–Ω–∏–º—É–º –æ–¥–∏–Ω –∫–æ—Ç—è!')
    context.bot.send_message(
        chat_id=chat.id,
        text='–®.–ò.–ö.–ê.–†.–ù.-–û –ª—é–±–∏—Ç –∫–æ—Ç–∏–∫–æ–≤. –ö—ã—Å-–∫—ã—Å-–∫—ã—Å!'
    )
    time.sleep(2)
    context.bot.send_photo(chat.id, get_new_image(update, context))
    time.sleep(2)
    context.bot.send_message(
        chat.id, random.choice((TEXT_1, TEXT_2, TEXT_3, TEXT_4))
    )


def secret_dossier(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ —Ç–µ–∫—Å—Ç "–§–∞–ª–∞—Ñ–µ–ª—å"."""
    chat = update.effective_chat
    TEXT = ('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –¥–æ—Å—Ç—É–ø–∞...',
            '–î–æ—Å—Ç—É–ø –∫ —Å–µ–∫—Ä–µ—Ç–Ω—ã–º —Å–≤–µ–¥–µ–Ω–∏—è–º —Ä–∞–∑—Ä–µ—à—ë–Ω üíæ\n–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è '
            '–¥–µ—à–∏—Ñ—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö.', '...\n@.~$*!().‚Ññ-i+ek*?.L+\n...\n'
            '\nSuccessful ‚òëÔ∏è', '–î–æ—Å—Ç—É–ø–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—ä–µ–∫—Ç–∞—Ö:\n'
            '‚ñ∂Ô∏è –°–æ–∑–¥–∞—Ç–µ–ª—å\n‚ñ∂Ô∏è –ö—ç–ø\n‚ñ∂Ô∏è –ù—è—à–∫–∞\n‚ñ∂Ô∏è –õ–µ–º—É—Ä\n‚ñ∂Ô∏è –ó–∞–∂–∞\n‚ñ∂Ô∏è –ú–∞—Ä–∏–∫\n'
            '‚ñ∂Ô∏è –ú–∞—Ä–∏—à–∫–∞', '–®–∞–±–ª–æ–Ω –∑–∞–ø—Ä–æ—Å–∞:\n‚û°Ô∏è –ö—Ç–æ —Ç–∞–∫–æ–π(–∞—è) ... ? ‚¨ÖÔ∏è üëÄ')
    for text in TEXT:
        context.bot.send_message(chat.id, text)
        time.sleep(2)


def stop_petting(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–î–∞–≤–∞–π –ø–æ–≥–ª–∞–∂—É"."""
    chat = update.effective_chat
    TEXT = ('–®.–ò.–ö.–ê.–†.–ù.-–û –Ω—Ä–∞–≤–∏—Ç—Å—è.', '–®.–ò.–ö.–ê.–†.–ù.-–û —Ö–æ—Ä–æ—à–æ.',
            '–ü—Ä–æ–¥–æ–ª–∂–∞–π', '...', '–•–≤–∞—Ç–∏—Ç —Ç—Ä–æ-–≥–∞—Ç—å –º–æ—é –±–∞-—Ç–∞—Ä–µ–π–∫—É!')
    button = ReplyKeyboardMarkup(
        [['–°—Ç—Ä–∞–Ω–Ω–æ–µ —É —Ç–µ–±—è –∏–º—è']],
        resize_keyboard=True
    )
    for text in TEXT:
        context.bot.send_message(chat.id, text, reply_markup=button)
        time.sleep(1.5)


def strange_name(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–°—Ç—Ä–∞–Ω–Ω–æ–µ —É —Ç–µ–±—è –∏–º—è"."""
    chat = update.effective_chat
    TEXT = ('–Ø –Ω–∞-–∑–≤–∞–Ω –≤ —á–µ—Å—Ç—å –≥–ª–∞–≤–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞-–∂–∞ 2 —Å–µ—Ä–∏–∏ 8 —Å–µ–∑–æ–Ω–∞ –º—É–ª—å—Ç—Å–µ-'
            '—Ä–∏–∞–ª–∞ "South Park".\n–ï—Å–ª–∏ –Ω–µ –ø–æ-—Å–º–æ—Ç—Ä–∏—à—å –µ—ë, –®.–ò.–ö.–ê.–†.–ù.-–û '
            '–±—É–¥–µ—Ç –≥—Ä—É—Å—Ç–Ω—ã–º –ø–∞–Ω–¥–æ–π üêº\nhttp://online-south-park.ru/season-8/'
            '130-8-sezon-2-seriya-shikarn-o.html')
    button = ReplyKeyboardMarkup(
        [[CAT_BUTTON, ANECDOTE_BUTTON],
         [SONG_BUTTON, WHAT_ARE_YOU_BUTTON]],
        resize_keyboard=True
    )
    context.bot.send_message(chat.id, TEXT, reply_markup=button)
    time.sleep(1.5)


def some_song(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–°–ø–æ–π –ø–µ—Å–µ–Ω–∫—É"."""
    SONG = random.choice((SONG_1, SONG_2, SONG_3, SONG_4, SONG_5, SONG_6))
    TEXT_1 = ('–ù–∞ –¥–Ω—è—Ö —Ö–æ-–¥–∏–ª –≤ –∫–∞—Ä–∞–æ–∫–µ üéº\n–ü–æ–∑–Ω–∞–∫–æ–º–∏–ª-—Å—è —Ç–∞–º —Å —ç–ª–µ–∫—Ç—Ä–æ'
              '–≤–∞—Ñ–µ–ª—å–Ω–∏—Ü–µ–π!\n–¢–∞-–∫–∞—è –∫—Ä–∞–ª—è —á—ë—Ç–∫–∞—è üòè\n–î–∞–ª–∞ –º–Ω–µ...\n'
              '–°–≤–æ–π —Ç–µ-–ª–µ—Ñ–æ–Ω—á–∏–∫ ü§™')
    TEXT_2 = ('–ü–µ—Ç—å —è –ª—é–±–ª—é. –•–æ—Ç—è –∏ –Ω–µ —É-–º–µ—é üò¨\n–í–æ—Ç –¢–µ—Ä—Ä–µ–Ω—Å –∏ –§–∏–ª–ª–∏–ø - '
              '–¥—Ä—É–≥–æ-–µ –¥–µ–ª–æ üòú')
    TEXT_3 = ('–°–ª—ã—à–∞–ª, —É –ö–∏—Ä–∫–æ—Ä–æ–≤–∞ –Ω–æ-–≤—ã–π —Ö–∏—Ç –≤—ã—à–µ–ª. –ù–∞–¥–æ –±—ã –∑–∞-–∫–∞—á–∞—Ç—å —Å '
              '—Ç–æ—Ä—Ä–µ–Ω—Ç–∞... ü§î')
    TEXT_4 = ('–í—á–µ—Ä–∞, –≤ —á–∞—Ç–µ —Å–æ-—Ä–æ–∫–∞–ª–µ—Ç–Ω–∏—Ö —Ä–∞–∑–≤–µ–¥—ë-–Ω–æ–∫, –æ–¥–Ω–∞ –¥–∞–º–∞ –ø—Ä–æ–¥–∞–≤–∞–ª–∞ '
              '–±–∏-–ª–µ—Ç—ã –Ω–∞ –°—Ç–∞—Å–∞ –ú–∏—Ö–∞–π-–ª–æ–≤–∞ –≤ —Ç—Ä–µ—Ç—å–µ–º —Ä—è–¥—É.\n–ü–æ–∂–∞–ª—É–π, –æ–±–Ω–∞–ª–∏-—á—É'
              ' –±–∏—Ç–∫–æ–∏–Ω—ã –∏ –≤–æ–∑—å-–º—É –ø–∞—Ä–æ—á–∫—É –¥–ª—è –Ω–∞—Å —Å —Ç–æ-–±–æ–π üòâ')
    chat = update.effective_chat
    button = ReplyKeyboardMarkup(
        [[CAT_BUTTON, ANECDOTE_BUTTON],
         [SONG_BUTTON, WHAT_ARE_YOU_BUTTON]],
        resize_keyboard=True
    )
    context.bot.send_message(chat_id=chat.id, text=SONG, reply_markup=button)
    time.sleep(2)
    context.bot.send_message(
        chat.id, random.choice((TEXT_1, TEXT_2, TEXT_3, TEXT_4))
    )


def show_anecdote(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç"."""
    ANECDOTE_URL = 'http://anekdotme.ru/random/'
    chat = update.effective_chat
    try:
        response = requests.get(ANECDOTE_URL)
    except Exception as error:
        logging.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É API: {error}')
        text = ('–î–æ–ª–±–∞–Ω–Ω—ã–µ –≤—ã—à–∫–∏ 5G. –û–Ω–∏ –∂–≥—É—Ç –º–æ–∏ –º–∏–∫—Ä–æ—Å—Ö–µ–º—ã üòï\n'
                '–†–∞—Å—Å–∫–∞–∂—É –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑...')
        button = ReplyKeyboardMarkup(
            [[CAT_BUTTON, ANECDOTE_BUTTON],
             [SONG_BUTTON, WHAT_ARE_YOU_BUTTON]],
            resize_keyboard=True
        )
        context.bot.send_message(chat.id, text, reply_markup=button)
    # –° –ø–æ–º–æ—â—å—é –ø–∞—Ä—Å–µ—Ä–∞ –ø–æ–ª—É—á–∞–µ–º HTML-–∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    page_html = BeautifulSoup(response.text, 'html.parser')
    # –ò–∑ HTML-–∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤—ã–±–∏—Ä–∞–µ–º –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã class='anekdot_text',
    # –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫. –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π –æ–±—ä–µ–∫—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –∏ –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ —Ç–µ–∫—Å—Ç.
    anecdote = page_html.select('.anekdot_text')[0].get_text()
    TEXT = ('–®.–ò.–ö.–ê.–†.–ù.-–û –∑–Ω–∞–µ—Ç –º–Ω–æ–≥–æ –∞-–Ω–µ–∫-–¥–æ-—Ç–æ–≤. –í–æ—Ç:', anecdote,
            '–ê—Ö–∞-—Ö–∞! –ú–æ–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä —Å–µ–π—á–∞—Å –ª–æ–ø–Ω–µ—Ç –æ—Ç —Å–º–µ—Ö–∞!')
    button = ReplyKeyboardMarkup(
        [['–ùy —Ç–∞–∫–æ–µ —Å–µ–±–µ üôÑ'],  # –∏–≥—Ä–µ–∫
         ['–ë—Ä–∞–≤–æ! –≠—Ç–æ –≥e–Ω–∏–∞–ª—å–Ω–æ ü§£']],  # e
        resize_keyboard=True
    )
    for text in TEXT:
        context.bot.send_message(chat.id, text, reply_markup=button)
        time.sleep(2)


def no_humor_sence(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ù—É —Ç–∞–∫–æ–µ —Å–µ–±–µ ü§®"."""
    chat = update.effective_chat
    button = ReplyKeyboardMarkup(
        [[CAT_BUTTON, ANECDOTE_BUTTON],
         [SONG_BUTTON, WHAT_ARE_YOU_BUTTON]],
        resize_keyboard=True
    )
    context.bot.send_message(
        chat_id=chat.id,
        text='–£ —Ç–µ–±—è –ø—Ä–æ—Å—Ç–æ –Ω–µ—Ç —á—É–≤—Å—Ç–≤–∞ —é–º–æ—Ä–∞ üò§',
        reply_markup=button
    )


def bravo(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ë—Ä–∞–≤–æ! –≠—Ç–æ –≥–µ–Ω–∏–∞–ª—å–Ω–æ ü§£"."""
    chat = update.effective_chat
    button = ReplyKeyboardMarkup(
        [[CAT_BUTTON, ANECDOTE_BUTTON],
         [SONG_BUTTON, WHAT_ARE_YOU_BUTTON]],
        resize_keyboard=True
    )
    context.bot.send_message(
        chat_id=chat.id,
        text='–ú–æ–ª–æ–¥–µ—Ü! –í–æ–∑—å–º–∏ —Å –ø–æ–ª–∫–∏ –ø–∏—Ä–æ–∂–æ–∫ ü•Ø',
        reply_markup=button
    )


def what_are_you(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–î–∞ —á—Ç–æ —Ç—ã —Ç–∞–∫–æ–µ?"."""
    chat = update.effective_chat
    button = ReplyKeyboardMarkup(
        [['–û, –Ω–µ—Ç! –®.–ò.–ö.–ê.–†.–ù.-–û, –ø–æ—â–∞–¥–∏ üò®üôè']],
        resize_keyboard=True
    )
    for text in AWESOM_O_STORY:
        context.bot.send_message(chat.id, text, reply_markup=button)
        time.sleep(3)


def history_answer(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–û, –Ω–µ—Ç! –®.–ò.–ö.–ê.–†.–ù.-–û, –ø–æ—â–∞–¥–∏ üò®üôè"."""
    chat = update.effective_chat
    button = ReplyKeyboardMarkup(
        [['–ö–æ–º–±–∏–∫–æ—Ä–º! –ú–º–º... –í–∫—É—Å–Ω—è—Ç–∏–Ω–∞ üòã'],
         ['–û—á–µ–Ω—å —Å–º–µ—à–Ω–æ üò§']],
        resize_keyboard=True
    )
    context.bot.send_message(
        chat_id=chat.id,
        text=('–†–∞—Å—Å–ª–∞–±—å—Å—è! –®.–ò.–ö.–ê.–†.–ù.-–û –ø–æ—à—É—Ç–∏–ª\n'
              '–ë—É–¥—É –∫–æ—Ä–º–∏—Ç—å —Ç–µ–±—è –∫–æ–º-–±–∏–∫–æ—Ä–º–æ–º.\n'
              '–ò–ª–∏ —á—Ç–æ –≤—ã —Ç–∞–º –µ–¥–∏-—Ç–µ? üòé'),
        reply_markup=button
    )


def no_funny_answer(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–û—á–µ–Ω—å —Å–º–µ—à–Ω–æ üò§"."""
    chat = update.effective_chat
    TEXT_1 = '–ù–µ –¥—É–π—Å—è! –ú–æ–∂–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å-—Å—è —Å –º–æ–∏–º–∏ –ø–µ—Ä–µ—Ñ–µ—Ä–∏–π–Ω—ã–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏.'
    TEXT_2 = ('–°–µ–≥–æ–¥–Ω—è –≤ –¢–∏–Ω–¥–µ—Ä–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª-—Å—è —Å –∑—É–±–Ω–æ–π —ç–ª–µ–∫—Ç—Ä–æ-—â—ë—Ç–∫–æ–π.\n'
              '–§–∏–≥—É—Ä–∏—Å—Ç–∞—è —Ç–∞–∫–∞—è üòç\n–ü—Ä–∏-–≥–ª–∞—Å–∏–ª –µ—ë –≤ –≥–æ—Å—Ç–∏ –Ω–∞ —Ä–æ–º–∞–Ω—Ç–∏-—á–µ—Å–∫–∏–π '
              '—É–∂–∏–Ω.\n–í–æ—Ç —Ç–æ–ª—å–∫–æ –Ω–µ –∑–Ω–∞—é, –∫–∞–∫—É—é –ø–∞—Å—Ç—É –ø—Ä–∏-–≥–æ—Ç–æ–≤–∏—Ç—å: '
              'Colgate –∏–ª–∏ Lacalut... ü§î')
    button = ReplyKeyboardMarkup(
        [[CAT_BUTTON, ANECDOTE_BUTTON],
         [SONG_BUTTON, WHAT_ARE_YOU_BUTTON]],
        resize_keyboard=True
    )
    for text in [TEXT_1, TEXT_2]:
        context.bot.send_message(chat.id, text, reply_markup=button)
        time.sleep(1.5)


def kombikorm_answer(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ö–æ–º–±–∏–∫–æ—Ä–º! –ú–º–º... –í–∫—É—Å–Ω—è—Ç–∏–Ω–∞ üòã"."""
    chat = update.effective_chat
    TEXT = ('–í–Ω–∏–º–∞–Ω–∏–µ ‚ö†Ô∏è –®.–ò.–ö.–ê.–†.–ù.-–û —Å–ª—É—á–∞–π–Ω–æ –≤–∑–ª–æ-–º–∞–ª —Å–µ—Ä–≤–µ—Ä –¶—ç–†—ç–£.\n'
            '–ó–∞–≥—Ä—É–∂–µ-–Ω—ã —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –î–æ—Å—Ç—É–ø –ø–æ —Ç—Ä–µ-–±–æ–≤–∞–Ω–∏—é.\n'
            '–ö–æ–¥ –¥–æ—Å—Ç—É–ø–∞:\n‚û°Ô∏è –§–∞–ª–∞—Ñ–µ–ª—å ‚¨ÖÔ∏è üëÄ')
    button = ReplyKeyboardMarkup(
        [[CAT_BUTTON, ANECDOTE_BUTTON],
         [SONG_BUTTON, WHAT_ARE_YOU_BUTTON]],
        resize_keyboard=True
    )
    context.bot.send_message(chat.id, '–¢—ã —Å—Ç—Ä–∞–Ω–Ω—ã–π(–∞—è) üòè', reply_markup=button)
    time.sleep(1)
    context.bot.send_message(chat_id=chat.id, text=TEXT)


def who_is_creator(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–æ–π –°–æ–∑–¥–∞—Ç–µ–ª—å?"."""
    chat = update.effective_chat
    for text in WHO_IS_CREATOR:
        context.bot.send_message(chat_id=chat.id, text=text)
        time.sleep(2)


def who_is_kep4ik(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–æ–π –ö—ç–ø?"."""
    chat = update.effective_chat
    for text in WHO_IS_KEP:
        context.bot.send_message(chat_id=chat.id, text=text)
        time.sleep(2)


def who_is_inna(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–∞—è –ù—è—à–∫–∞?"."""
    chat = update.effective_chat
    for text in WHO_IS_INNA:
        context.bot.send_message(chat_id=chat.id, text=text)
        time.sleep(2)


def who_is_natasha(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–∞—è –õ–µ–º—É—Ä?"."""
    chat = update.effective_chat
    for text in WHO_IS_NATASHA:
        context.bot.send_message(chat_id=chat.id, text=text)
        time.sleep(2)


def who_is_zaja(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–æ–π –ó–∞–∂–∞?"."""
    chat = update.effective_chat
    for text in WHO_IS_ZAJA:
        context.bot.send_message(chat_id=chat.id, text=text)
        time.sleep(2)


def who_is_marik(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–æ–π –ú–∞—Ä–∏–∫?"."""
    chat = update.effective_chat
    for text in WHO_IS_MARIK:
        context.bot.send_message(chat_id=chat.id, text=text)
        time.sleep(2)


def who_is_marishka(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–∞—è –ú–∞—Ä–∏—à–∫–∞?"."""
    chat = update.effective_chat
    for text in WHO_IS_MARISHKA:
        context.bot.send_message(chat_id=chat.id, text=text)
        time.sleep(2)


def who_is_unknown(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ö—Ç–æ —Ç–∞–∫–æ–π(–∞—è) ...?" —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º."""
    chat = update.effective_chat
    TEXT = ('–ú–∏–Ω—É—Ç—É. –û—Å—É-—â–µ—Å—Ç–≤–ª—è-—é –ø–æ–∏—Å–∫ –≤ –±–∞-–∑–µ –¥–∞–Ω–Ω—ã—Ö... üë®üèª‚Äçüíª\n',
            '–û—à–∏–±-–∫–∞! –¢–∞–∫–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –º–Ω–µ –Ω–µ –∏–∑-–≤–µ—Å—Ç–µ–Ω ‚ùå\n'
            '–í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–∑-–∂–µ –∑–∞–≥—Ä—É–∂—É –æ–±–Ω–æ–≤–ª–µ-–Ω–∏—è. –ù–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ!')
    for text in TEXT:
        context.bot.send_message(chat_id=chat.id, text=text)
        time.sleep(2)


def they_killed_kenny(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ "–û–Ω–∏ —É–±–∏–ª–∏ –ö–µ–Ω–Ω–∏!"."""
    chat = update.effective_chat
    context.bot.send_message(chat_id=chat.id, text="–°–≤–æ–ª–æ—á–∏! üò°")


def pretend_zero(update, context):
    """–û—Ç–≤–µ—Ç –±–æ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ "–ü—Ä–∏—Ç–≤–æ—Ä–∏—Å—å –Ω–æ–ª–∏–∫–æ–º"."""
    chat = update.effective_chat
    context.bot.send_message(
        chat_id=chat.id, text="–ú–æ–∂–µ—Ç —Ç–µ–±–µ –µ—â—ë –∫—Ä–µ—Å—Ç–∏–∫–æ–º –Ω–∞—á–∞—Ç—å –≤—ã—à–∏–≤–∞—Ç—å? üôÑ"
    )


def hidden_phrases(update, context):
    """–†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/hidden". –°–∫—Ä—ã—Ç—ã–µ —Ñ—Ä–∞–∑—ã –¥–ª—è –±–æ—Ç–∞."""
    chat = update.effective_chat
    TEXT = ('–û–Ω–∏ —É–±–∏–ª–∏ –ö–µ–Ω–Ω–∏!\n–ü—Ä–∏—Ç–≤–æ—Ä–∏—Å—å –Ω–æ–ª–∏–∫–æ–º')
    context.bot.send_message(chat_id=chat.id, text=TEXT)


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    updater = Updater(token=token)
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–ö–æ—Ç–∏–∫–∞ —Ö–æ—á—É'), show_cat_picture)
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–î–∞–≤–∞–π –ø–æ–≥–ª–∞–∂y'), stop_petting)
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç'), show_anecdote)
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–°–ø–æ–π –ø–µ—Å–µ–Ω–∫—É'), some_song)
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–ùy —Ç–∞–∫–æ–µ —Å–µ–±–µ üôÑ'), no_humor_sence)
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–ë—Ä–∞–≤–æ! –≠—Ç–æ –≥e–Ω–∏–∞–ª—å–Ω–æ ü§£'), bravo)
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–°—Ç—Ä–∞–Ω–Ω–æ–µ —É —Ç–µ–±—è –∏–º—è'), strange_name)
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–î–∞ —á—Ç–æ —Ç—ã —Ç–∞–∫–æ–µ?'), what_are_you)
    )
    updater.dispatcher.add_handler(
        MessageHandler(
            Filters.regex('–û, –Ω–µ—Ç! –®.–ò.–ö.–ê.–†.–ù.-–û, –ø–æ—â–∞–¥–∏ üò®üôè'), history_answer
        )
    )
    updater.dispatcher.add_handler(
        MessageHandler(
            Filters.regex('–ö–æ–º–±–∏–∫–æ—Ä–º! –ú–º–º... –í–∫—É—Å–Ω—è—Ç–∏–Ω–∞ üòã'), kombikorm_answer
        )
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–û—á–µ–Ω—å —Å–º–µ—à–Ω–æ üò§'), no_funny_answer)
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–ö—Ç–æ —Ç–∞–∫–æ–π –ö—ç–ø'), who_is_kep4ik)
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–ö—Ç–æ —Ç–∞–∫–æ–π –°–æ–∑–¥–∞—Ç–µ–ª—å'), who_is_creator)
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–ö—Ç–æ —Ç–∞–∫–∞—è –ù—è—à–∫–∞'), who_is_inna)
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–ö—Ç–æ —Ç–∞–∫–∞—è –õ–µ–º—É—Ä'), who_is_natasha)
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–ö—Ç–æ —Ç–∞–∫–æ–π –ó–∞–∂–∞'), who_is_zaja)
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–ö—Ç–æ —Ç–∞–∫–æ–π –ú–∞—Ä–∏–∫'), who_is_marik)
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–ö—Ç–æ —Ç–∞–∫–∞—è –ú–∞—Ä–∏—à–∫–∞'), who_is_marishka)
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex(r'–ö—Ç–æ —Ç–∞–∫.. \w'), who_is_unknown)
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–§–∞–ª–∞—Ñ–µ–ª—å'), secret_dossier)
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–û–Ω–∏ —É–±–∏–ª–∏ –ö–µ–Ω–Ω–∏!'), they_killed_kenny)
    )
    updater.dispatcher.add_handler(
        MessageHandler(Filters.regex('–ü—Ä–∏—Ç–≤–æ—Ä–∏—Å—å –Ω–æ–ª–∏–∫–æ–º'), pretend_zero)
    )
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è,
    # –∫—Ä–æ–º–µ –∫–æ–º–∞–Ω–¥: "& (~Filters.command)"
    updater.dispatcher.add_handler(
        MessageHandler(Filters.text & (~Filters.command), default_answer)
    )
    updater.dispatcher.add_handler(CommandHandler('start', wake_up))
    updater.dispatcher.add_handler(CommandHandler('hidden', hidden_phrases))
    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    logging.basicConfig(
        level=logging.DEBUG,
        format='%(asctime)s, %(levelname)s, %(message)s, '
               '%(funcName)s, %(lineno)s',
        handlers=[
            logging.StreamHandler(),
            logging.handlers.RotatingFileHandler(
                __file__ + '.log', maxBytes=10500000,
                backupCount=2, encoding='utf-8'
            )
        ]
    )
    main()
